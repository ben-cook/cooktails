{"version":3,"sources":["components/SearchPage/ingredients.ts","util.ts","components/RandomDrinkButton.tsx","components/SearchPage/SearchBar.tsx","apollo/FuzzyDrinkSearch.ts","apollo/FindDrinksWithIngredients.ts","components/SearchPage/DrinkCard.tsx","components/SearchPage/SearchResults.tsx","components/SearchPage/SearchPage.tsx","components/DrinkPage/IngredientTable.tsx","components/Loading.tsx","apollo/DrinkSearchByName.ts","components/DrinkPage/DrinkPage.tsx","apollo/IngredientSearchByName.ts","components/IngredientPage/IngredientPage.tsx","apollo/RandomDrink.ts","components/RandomPage/RandomPage.tsx","Router.tsx","App.tsx","apollo/client.ts","index.tsx"],"names":["sortedIngredients","capitalizeEveryWord","s","split","map","toUpperCase","slice","capitalizeString","join","RandomDrinkButton","randomDrinkHandler","className","buttonText","Button","variant","color","Typography","onClick","useStyles","makeStyles","searchGridContainer","flexGrow","width","searchbar","marginTop","marginBottom","filterToggle","margin","cursor","ingredientsAutocomplete","paddingTop","randomDrinkButton","textTransform","optionsPaper","justifyContent","SearchBar","onChangeHandler","onFilterChangeHandler","classes","history","useHistory","useState","open","setOpen","Grid","container","direction","alignItems","spacing","item","xs","zeroMinWidth","TextField","label","onChange","sm","Paper","Container","Autocomplete","multiple","id","options","ingredients","getOptionLabel","option","filterSelectedOptions","renderInput","params","placeholder","align","Box","textAlign","url","push","FUZZY_DRINK_SEARCH","gql","FIND_DRINKS_WITH_INGREDIENTS","root","height","image","DrinkCard","drink","Card","strDrinkThumb","CardMedia","CardContent","name","ingredient","idx","SearchResults","drinks","largerThan600","useMediaQuery","md","lg","style","length","to","textDecoration","resultsGridContainer","resultsGridItem","errorMessage","formatErrorMessage","ingredientsUpper","recursiveFormat","SearchPage","searchInput","setSearchInput","filterInput","setFilterInput","displayType","setDisplayType","searchDrinkData","useQuery","variables","fuzzySearchDrinksByNameSearchTerm","fuzzySearchDrinksByNameOffset","fuzzySearchDrinksByNameLimit","data","ingredientFilterData","findDrinksWithIngredientsIngredientNames","findDrinksWithIngredientsOffset","findDrinksWithIngredientsLimit","searchDataRef","useRef","current","e","target","value","console","log","fuzzySearchDrinksByName","findDrinksWithIngredients","table","row","IngredientTable","rows","measure","measures","TableContainer","component","Table","aria-label","TableHead","TableRow","TableCell","TableBody","maxHeight","maxWidth","Loading","type","DRINK_SEARCH_BY_NAME","video","DrinkPage","findDrinkByNameName","loading","findDrinkByName","instructions","strVideo","INGREDIENT_SEARCH_BY_NAME","IngredientPage","findIngredientByNameName","findIngredientByName","replaceAll","description","ABV","RANDOM_DRINK","RandomPage","refetch","randomDrink","Router","exact","path","render","props","match","App","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","StrictMode","ApolloProvider","basename","document","getElementById"],"mappings":"gPAuGaA,EAAoB,CAC/B,OACA,iBACA,MACA,WACA,gBACA,eACA,cACA,cACA,YACA,iBACA,eACA,UACA,UACA,oBACA,kBACA,UACA,SACA,aACA,mBACA,YACA,gBACA,YACA,oBACA,kBACA,QACA,eACA,SACA,gBACA,iBACA,SACA,cACA,kBACA,iBACA,kBACA,WACA,iBACA,eACA,iBACA,MACA,WACA,WACA,YACA,YACA,WACA,MACA,SACA,cACA,mBACA,SACA,YACA,cACA,cACA,gBACA,iBACA,SACA,OACA,QACA,QACA,cACA,cACA,WACA,YACA,OACA,aACA,QACA,uBACA,OACA,SACA,iBACA,OACA,cACA,eACA,sBACA,kBACA,QACA,OACA,WACA,SACA,MACA,UACA,SACA,SACA,WACA,mBACA,aACA,SACA,eACA,sBACA,QACA,cACA,iBACA,MACA,UACA,eACA,aACA,QACA,QACA,aACA,UACA,W,8DCpMWC,EAAsB,SAACC,GAAD,OACjCA,EACGC,MAAM,KACNC,KAAI,SAACF,GAAD,OANuB,SAACA,GAAD,OAC7BA,GAAKA,EAAE,GAAGG,cAAgBH,EAAEI,MAAM,IAAO,GAK5BC,CAAiBL,MAC5BM,KAAK,M,gBCeKC,EAnBW,SAAC,GAII,IAH7BC,EAG4B,EAH5BA,mBACAC,EAE4B,EAF5BA,UACAC,EAC4B,EAD5BA,WAEA,OACE,cAACC,EAAA,EAAD,CACEC,QAAQ,WACRC,MAAM,UACNJ,UAAWA,EAHb,SAME,cAACK,EAAA,EAAD,CAAYF,QAAQ,QAAQG,QAAS,kBAAMP,KAA3C,SACGE,OCHHM,EAAYC,YAAW,CAC3BC,oBAAqB,CAAEC,SAAU,EAAGC,MAAO,QAC3CC,UAAW,CAAEC,UAAW,MAAOC,aAAc,MAAOH,MAAO,QAC3DI,aAAc,CAAEC,OAAQ,OAAQ,UAAW,CAAEC,OAAQ,YACrDC,wBAAyB,CAAEC,WAAY,OACvCC,kBAAmB,CACjBN,aAAc,MACdO,cAAe,aACfL,OAAQ,QAEVM,aAAc,CACZR,aAAc,MACdS,eAAgB,YAgGLC,EAtFG,SAAC,GAIC,IAHlBC,EAGiB,EAHjBA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","file":"static/js/main.935599ce.chunk.js","sourcesContent":["export const ingredients = [\r\n  \"Light rum\",\r\n  \"Applejack\",\r\n  \"Gin\",\r\n  \"Dark rum\",\r\n  \"Sweet Vermouth\",\r\n  \"Strawberry schnapps\",\r\n  \"Scotch\",\r\n  \"Apricot brandy\",\r\n  \"Triple sec\",\r\n  \"Southern Comfort\",\r\n  \"Orange bitters\",\r\n  \"Brandy\",\r\n  \"Lemon vodka\",\r\n  \"Blended whiskey\",\r\n  \"Dry Vermouth\",\r\n  \"Amaretto\",\r\n  \"Tea\",\r\n  \"Champagne\",\r\n  \"Coffee liqueur\",\r\n  \"Bourbon\",\r\n  \"Tequila\",\r\n  \"Vodka\",\r\n  \"Añejo rum\",\r\n  \"Bitters\",\r\n  \"Sugar\",\r\n  \"Kahlua\",\r\n  \"demerara Sugar\",\r\n  \"Dubonnet Rouge\",\r\n  \"Watermelon\",\r\n  \"Lime juice\",\r\n  \"Irish whiskey\",\r\n  \"Apple brandy\",\r\n  \"Carbonated water\",\r\n  \"Cherry brandy\",\r\n  \"Creme de Cacao\",\r\n  \"Grenadine\",\r\n  \"Port\",\r\n  \"Coffee brandy\",\r\n  \"Red wine\",\r\n  \"Rum\",\r\n  \"Grapefruit juice\",\r\n  \"Ricard\",\r\n  \"Sherry\",\r\n  \"Cognac\",\r\n  \"Sloe gin\",\r\n  \"Apple juice\",\r\n  \"Pineapple juice\",\r\n  \"Lemon juice\",\r\n  \"Sugar syrup\",\r\n  \"Milk\",\r\n  \"Strawberries\",\r\n  \"Chocolate syrup\",\r\n  \"Yoghurt\",\r\n  \"Mango\",\r\n  \"Ginger\",\r\n  \"Lime\",\r\n  \"Cantaloupe\",\r\n  \"Berries\",\r\n  \"Grapes\",\r\n  \"Kiwi\",\r\n  \"Tomato juice\",\r\n  \"Cocoa powder\",\r\n  \"Chocolate\",\r\n  \"Heavy cream\",\r\n  \"Galliano\",\r\n  \"Peach Vodka\",\r\n  \"Ouzo\",\r\n  \"Coffee\",\r\n  \"Spiced rum\",\r\n  \"Water\",\r\n  \"Espresso\",\r\n  \"Angelica root\",\r\n  \"Orange\",\r\n  \"Cranberries\",\r\n  \"Johnnie Walker\",\r\n  \"Apple cider\",\r\n  \"Everclear\",\r\n  \"Cranberry juice\",\r\n  \"Egg yolk\",\r\n  \"Egg\",\r\n  \"Grape juice\",\r\n  \"Peach nectar\",\r\n  \"Lemon\",\r\n  \"Firewater\",\r\n  \"Lemonade\",\r\n  \"Lager\",\r\n  \"Whiskey\",\r\n  \"Absolut Citron\",\r\n  \"Pisco\",\r\n  \"Irish cream\",\r\n  \"Ale\",\r\n  \"Chocolate liqueur\",\r\n  \"Midori melon liqueur\",\r\n  \"Sambuca\",\r\n  \"Cider\",\r\n  \"Sprite\",\r\n  \"7-Up\",\r\n  \"Blackberry brandy\",\r\n  \"Peppermint schnapps\",\r\n  \"Creme de Cassis\",\r\n];\r\n\r\nexport const sortedIngredients = [\r\n  \"7-Up\",\r\n  \"Absolut Citron\",\r\n  \"Ale\",\r\n  \"Amaretto\",\r\n  \"Angelica root\",\r\n  \"Apple brandy\",\r\n  \"Apple cider\",\r\n  \"Apple juice\",\r\n  \"Applejack\",\r\n  \"Apricot brandy\",\r\n  \"Añejo rum\",\r\n  \"Berries\",\r\n  \"Bitters\",\r\n  \"Blackberry brandy\",\r\n  \"Blended whiskey\",\r\n  \"Bourbon\",\r\n  \"Brandy\",\r\n  \"Cantaloupe\",\r\n  \"Carbonated water\",\r\n  \"Champagne\",\r\n  \"Cherry brandy\",\r\n  \"Chocolate\",\r\n  \"Chocolate liqueur\",\r\n  \"Chocolate syrup\",\r\n  \"Cider\",\r\n  \"Cocoa powder\",\r\n  \"Coffee\",\r\n  \"Coffee brandy\",\r\n  \"Coffee liqueur\",\r\n  \"Cognac\",\r\n  \"Cranberries\",\r\n  \"Cranberry juice\",\r\n  \"Creme de Cacao\",\r\n  \"Creme de Cassis\",\r\n  \"Dark rum\",\r\n  \"Demerara Sugar\",\r\n  \"Dry Vermouth\",\r\n  \"Dubonnet Rouge\",\r\n  \"Egg\",\r\n  \"Egg yolk\",\r\n  \"Espresso\",\r\n  \"Everclear\",\r\n  \"Firewater\",\r\n  \"Galliano\",\r\n  \"Gin\",\r\n  \"Ginger\",\r\n  \"Grape juice\",\r\n  \"Grapefruit juice\",\r\n  \"Grapes\",\r\n  \"Grenadine\",\r\n  \"Heavy cream\",\r\n  \"Irish cream\",\r\n  \"Irish whiskey\",\r\n  \"Johnnie Walker\",\r\n  \"Kahlua\",\r\n  \"Kiwi\",\r\n  \"Lager\",\r\n  \"Lemon\",\r\n  \"Lemon juice\",\r\n  \"Lemon vodka\",\r\n  \"Lemonade\",\r\n  \"Light rum\",\r\n  \"Lime\",\r\n  \"Lime juice\",\r\n  \"Mango\",\r\n  \"Midori melon liqueur\",\r\n  \"Milk\",\r\n  \"Orange\",\r\n  \"Orange bitters\",\r\n  \"Ouzo\",\r\n  \"Peach Vodka\",\r\n  \"Peach nectar\",\r\n  \"Peppermint schnapps\",\r\n  \"Pineapple juice\",\r\n  \"Pisco\",\r\n  \"Port\",\r\n  \"Red wine\",\r\n  \"Ricard\",\r\n  \"Rum\",\r\n  \"Sambuca\",\r\n  \"Scotch\",\r\n  \"Sherry\",\r\n  \"Sloe gin\",\r\n  \"Southern Comfort\",\r\n  \"Spiced rum\",\r\n  \"Sprite\",\r\n  \"Strawberries\",\r\n  \"Strawberry schnapps\",\r\n  \"Sugar\",\r\n  \"Sugar syrup\",\r\n  \"Sweet Vermouth\",\r\n  \"Tea\",\r\n  \"Tequila\",\r\n  \"Tomato juice\",\r\n  \"Triple sec\",\r\n  \"Vodka\",\r\n  \"Water\",\r\n  \"Watermelon\",\r\n  \"Whiskey\",\r\n  \"Yoghurt\",\r\n];\r\n","export const REACT_APP_API_KEY = 9973533;\r\nexport const REACT_APP_CORS_PROXY_URL =\r\n  \"https://fierce-mountain-04762.herokuapp.com/\";\r\n\r\nexport const capitalizeString = (s: string): string =>\r\n  (s && s[0].toUpperCase() + s.slice(1)) || \"\";\r\n\r\nexport const capitalizeEveryWord = (s: string): string =>\r\n  s\r\n    .split(\" \")\r\n    .map((s) => capitalizeString(s))\r\n    .join(\" \");\r\n\r\nexport const replaceSpaceWithUnderscore = (s: string): string =>\r\n  s\r\n    .split(\"\")\r\n    .map((char) => (char === \" \" ? \"_\" : char))\r\n    .join(\"\");\r\n","import { Typography, Button } from \"@material-ui/core\";\r\n\r\ninterface RandomDrinkButtonProps {\r\n  randomDrinkHandler: () => void;\r\n  className: string;\r\n  buttonText: string;\r\n}\r\nconst RandomDrinkButton = ({\r\n  randomDrinkHandler,\r\n  className,\r\n  buttonText,\r\n}: RandomDrinkButtonProps) => {\r\n  return (\r\n    <Button\r\n      variant=\"outlined\"\r\n      color=\"default\"\r\n      className={className}\r\n      // fullWidth\r\n    >\r\n      <Typography variant=\"body1\" onClick={() => randomDrinkHandler()}>\r\n        {buttonText}\r\n      </Typography>\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default RandomDrinkButton;\r\n","import { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { sortedIngredients as ingredients } from \"./ingredients\";\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  Paper,\r\n  Container,\r\n  Typography,\r\n  Box,\r\n} from \"@material-ui/core\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { capitalizeEveryWord } from \"../../util\";\r\nimport RandomDrinkButton from \"../RandomDrinkButton\";\r\n\r\nconst useStyles = makeStyles({\r\n  searchGridContainer: { flexGrow: 1, width: \"100%\" },\r\n  searchbar: { marginTop: \"2vh\", marginBottom: \"2vh\", width: \"100%\" },\r\n  filterToggle: { margin: \"auto\", \"&:hover\": { cursor: \"pointer\" } },\r\n  ingredientsAutocomplete: { paddingTop: \"2vh\" },\r\n  randomDrinkButton: {\r\n    marginBottom: \"2vh\",\r\n    textTransform: \"capitalize\",\r\n    margin: \"auto\",\r\n  },\r\n  optionsPaper: {\r\n    marginBottom: \"2vh\",\r\n    justifyContent: \"center\",\r\n  },\r\n});\r\n\r\ninterface SearchBarProps {\r\n  onChangeHandler: (e: object & { target: { value: string } }) => void;\r\n  onFilterChangeHandler: (e: object, value: string[]) => void;\r\n  // setPopularDrinks: () => void;\r\n}\r\n\r\nconst SearchBar = ({\r\n  onChangeHandler,\r\n  onFilterChangeHandler,\r\n}: // setPopularDrinks,\r\nSearchBarProps) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const redirectTo = (url: string): void => {\r\n    history.push(url);\r\n  };\r\n\r\n  const [open, setOpen] = useState<boolean>(false);\r\n\r\n  const changeOpen = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  const randomDrinkHandler = () => {\r\n    redirectTo(\"/random\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n        spacing={2}\r\n        className={classes.searchGridContainer}\r\n      >\r\n        <Grid item xs zeroMinWidth>\r\n          <TextField\r\n            className={classes.searchbar}\r\n            label=\"Search for a drink\"\r\n            variant=\"outlined\"\r\n            onChange={onChangeHandler}\r\n          />\r\n        </Grid>\r\n        <Grid item container xs={2} sm={1}>\r\n          <FilterListIcon\r\n            className={classes.filterToggle}\r\n            onClick={changeOpen}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {open && (\r\n        <Paper className={classes.optionsPaper}>\r\n          <Container>\r\n            <Autocomplete\r\n              multiple\r\n              id=\"tags-outlined\"\r\n              options={ingredients}\r\n              getOptionLabel={(option) => capitalizeEveryWord(option)}\r\n              filterSelectedOptions\r\n              className={classes.ingredientsAutocomplete}\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  variant=\"outlined\"\r\n                  label=\"Filter by ingredients instead!\"\r\n                  placeholder=\"+\"\r\n                />\r\n              )}\r\n              onChange={onFilterChangeHandler}\r\n            />\r\n            <Typography variant=\"h6\" align=\"center\">\r\n              or...\r\n            </Typography>\r\n\r\n            <Box textAlign=\"center\">\r\n              <RandomDrinkButton\r\n                randomDrinkHandler={randomDrinkHandler}\r\n                className={classes.randomDrinkButton}\r\n                buttonText=\"Random Cocktail\"\r\n              />\r\n            </Box>\r\n          </Container>\r\n        </Paper>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import { gql } from \"@apollo/client\";\r\nimport { DrinkCardProps } from \"../components/SearchPage/DrinkCard\";\r\n\r\nexport const FUZZY_DRINK_SEARCH = gql`\r\n  query FuzzyDrinkSearch(\r\n    $fuzzySearchDrinksByNameSearchTerm: String\r\n    $fuzzySearchDrinksByNameLimit: Int\r\n    $fuzzySearchDrinksByNameOffset: Int\r\n  ) {\r\n    fuzzySearchDrinksByName(\r\n      searchTerm: $fuzzySearchDrinksByNameSearchTerm\r\n      limit: $fuzzySearchDrinksByNameLimit\r\n      offset: $fuzzySearchDrinksByNameOffset\r\n    ) {\r\n      name\r\n      ingredients {\r\n        name\r\n      }\r\n      strDrinkThumb\r\n    }\r\n  }\r\n`;\r\n\r\nexport interface FuzzyDrinkSearchData {\r\n  fuzzySearchDrinksByName: DrinkCardProps[];\r\n}\r\nexport interface FuzzyDrinkSearchVariables {\r\n  fuzzySearchDrinksByNameSearchTerm: string;\r\n  fuzzySearchDrinksByNameLimit: number;\r\n  fuzzySearchDrinksByNameOffset: number;\r\n}\r\n","import { gql } from \"@apollo/client\";\r\nimport { DrinkCardProps } from \"../components/SearchPage/DrinkCard\";\r\n\r\nexport const FIND_DRINKS_WITH_INGREDIENTS = gql`\r\n  query findDrinksWithIngredients(\r\n    $findDrinksWithIngredientsIngredientNames: [String]\r\n    $findDrinksWithIngredientsLimit: Int\r\n    $findDrinksWithIngredientsOffset: Int\r\n  ) {\r\n    findDrinksWithIngredients(\r\n      ingredientNames: $findDrinksWithIngredientsIngredientNames\r\n      limit: $findDrinksWithIngredientsLimit\r\n      offset: $findDrinksWithIngredientsOffset\r\n    ) {\r\n      name\r\n      ingredients {\r\n        name\r\n      }\r\n      strDrinkThumb\r\n    }\r\n  }\r\n`;\r\n\r\nexport interface FindDrinksWithIngredientsData {\r\n  findDrinksWithIngredients: DrinkCardProps[];\r\n}\r\n\r\nexport interface FindDrinksWithIngredientsVariables {\r\n  findDrinksWithIngredientsIngredientNames: string[];\r\n  findDrinksWithIngredientsLimit: number;\r\n  findDrinksWithIngredientsOffset: number;\r\n}\r\n","import { Card, CardContent, CardMedia, Typography } from \"@material-ui/core\";\r\nimport { ReactElement } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: { height: \"100%\" },\r\n  image: {\r\n    height: \"30vh\",\r\n  },\r\n});\r\n\r\nexport interface DrinkCardProps {\r\n  name: string;\r\n  ingredients: {\r\n    name: string;\r\n  }[];\r\n  strDrinkThumb: string;\r\n}\r\n\r\nconst DrinkCard = ({ drink }: { drink: DrinkCardProps }): ReactElement => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      {drink.strDrinkThumb && (\r\n        <CardMedia image={drink.strDrinkThumb} className={classes.image} />\r\n      )}\r\n\r\n      <CardContent>\r\n        <Typography variant=\"h6\">{drink.name}</Typography>\r\n        {/* <Typography variant=\"h6\">{drink.strDrinkThumb}</Typography> */}\r\n\r\n        {drink.ingredients.map((ingredient, idx) => (\r\n          <Typography variant=\"body1\" key={idx}>\r\n            {ingredient.name}\r\n          </Typography>\r\n        ))}\r\n\r\n        {/* <Typography variant=\"body1\">{drink.idDrink}</Typography> */}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default DrinkCard;\r\n","import { Grid } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DrinkCard, { DrinkCardProps } from \"./DrinkCard\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: { flexGrow: 1 },\r\n});\r\n\r\nconst SearchResults = ({ drinks }: { drinks: DrinkCardProps[] }) => {\r\n  const largerThan600 = useMediaQuery(\"(min-width:600px)\");\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"row\"\r\n      justifyContent=\"flex-start\"\r\n      alignItems=\"center\"\r\n      spacing={2}\r\n      className={classes.root}\r\n    >\r\n      {drinks.map((drink: DrinkCardProps) => (\r\n        <Grid\r\n          item\r\n          key={drink.name}\r\n          xs={12}\r\n          sm={6}\r\n          md={4}\r\n          lg={3}\r\n          style={{\r\n            height: largerThan600 && drink.ingredients.length > 0 ? \"60vh\" : \"\",\r\n          }}\r\n        >\r\n          <Link\r\n            to={`/drink/${drink.name}`}\r\n            style={{ color: \"inherit\", textDecoration: \"inherit\" }}\r\n          >\r\n            <DrinkCard drink={drink} />\r\n          </Link>\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default SearchResults;\r\n","import { useState, useRef } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Typography, Container } from \"@material-ui/core\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport { capitalizeEveryWord } from \"../../util\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport {\r\n  FuzzyDrinkSearchData,\r\n  FuzzyDrinkSearchVariables,\r\n  FUZZY_DRINK_SEARCH,\r\n} from \"../../apollo/FuzzyDrinkSearch\";\r\nimport {\r\n  FindDrinksWithIngredientsData,\r\n  FindDrinksWithIngredientsVariables,\r\n  FIND_DRINKS_WITH_INGREDIENTS,\r\n} from \"../../apollo/FindDrinksWithIngredients\";\r\nimport SearchResults from \"./SearchResults\";\r\n\r\nconst useStyles = makeStyles({\r\n  resultsGridContainer: { flexGrow: 1 },\r\n  resultsGridItem: {},\r\n  errorMessage: { margin: \"auto\", marginTop: \"1.5em\" },\r\n});\r\n\r\nconst formatErrorMessage = (ingredients: string[]): string => {\r\n  let ingredientsUpper = ingredients.map(capitalizeEveryWord);\r\n\r\n  const recursiveFormat = (ingredients: string[]): string => {\r\n    let string;\r\n    if (ingredients.length === 1) {\r\n      string = ingredients[0];\r\n    } else if (ingredients.length === 2) {\r\n      string = `${recursiveFormat(\r\n        ingredients.slice(0, 1)\r\n      )} and ${recursiveFormat(ingredients.slice(1))}`;\r\n    } else {\r\n      string = `${ingredients[0]}, ${recursiveFormat(ingredients.slice(1))}`;\r\n    }\r\n\r\n    return string;\r\n  };\r\n\r\n  return `Couldn't find any drinks with ${recursiveFormat(ingredientsUpper)}.`;\r\n};\r\n\r\nconst SearchPage = () => {\r\n  const classes = useStyles();\r\n\r\n  const [searchInput, setSearchInput] = useState<string>(\"\");\r\n  const [filterInput, setFilterInput] = useState<string[]>([]);\r\n\r\n  type DisplayType = \"search\" | \"ingredientFilter\";\r\n  const [displayType, setDisplayType] = useState<DisplayType>(\"search\");\r\n\r\n  const { data: searchDrinkData } = useQuery<\r\n    FuzzyDrinkSearchData,\r\n    FuzzyDrinkSearchVariables\r\n  >(FUZZY_DRINK_SEARCH, {\r\n    variables: {\r\n      fuzzySearchDrinksByNameSearchTerm: searchInput,\r\n      fuzzySearchDrinksByNameOffset: 0,\r\n      fuzzySearchDrinksByNameLimit: 8,\r\n    },\r\n  });\r\n\r\n  const { data: ingredientFilterData } = useQuery<\r\n    FindDrinksWithIngredientsData,\r\n    FindDrinksWithIngredientsVariables\r\n  >(FIND_DRINKS_WITH_INGREDIENTS, {\r\n    variables: {\r\n      findDrinksWithIngredientsIngredientNames: filterInput,\r\n      findDrinksWithIngredientsOffset: 0,\r\n      findDrinksWithIngredientsLimit: 8,\r\n    },\r\n  });\r\n\r\n  const onSearchChangeHandler = (e: object & { target: { value: string } }) => {\r\n    setSearchInput(e.target.value);\r\n    setDisplayType(\"search\");\r\n    console.log(\"change\");\r\n  };\r\n\r\n  const onFilterChangeHandler = (e: object, value: string[]) => {\r\n    setFilterInput(value);\r\n    setDisplayType(\"ingredientFilter\");\r\n    console.log(\"filter change\");\r\n  };\r\n\r\n  const searchDataRef = useRef(searchDrinkData);\r\n\r\n  if (searchDrinkData) {\r\n    searchDataRef.current = searchDrinkData;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <SearchBar\r\n        onChangeHandler={onSearchChangeHandler}\r\n        onFilterChangeHandler={onFilterChangeHandler}\r\n      />\r\n\r\n      {/* {!drinks && !errorMessage && <Loading />} */}\r\n      {displayType === \"search\" && searchDataRef.current && (\r\n        <SearchResults drinks={searchDataRef.current.fuzzySearchDrinksByName} />\r\n      )}\r\n      {displayType === \"ingredientFilter\" && ingredientFilterData && (\r\n        <SearchResults\r\n          drinks={ingredientFilterData.findDrinksWithIngredients}\r\n        />\r\n      )}\r\n\r\n      {displayType === \"ingredientFilter\" &&\r\n        ingredientFilterData?.findDrinksWithIngredients.length === 0 && (\r\n          <Container>\r\n            <Typography\r\n              variant=\"h4\"\r\n              color=\"textPrimary\"\r\n              className={classes.errorMessage}\r\n              align=\"center\"\r\n            >\r\n              {formatErrorMessage(filterInput)}\r\n            </Typography>\r\n          </Container>\r\n        )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchPage;\r\n","import {\r\n  TableContainer,\r\n  TableHead,\r\n  TableCell,\r\n  TableBody,\r\n  TableRow,\r\n  Table,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { DrinkData } from \"../../interfaces\";\r\n\r\nconst useStyles = makeStyles({\r\n  table: {},\r\n  row: { \"&:hover\": { cursor: \"pointer\" } },\r\n});\r\n\r\nconst IngredientTable = ({ drink }: { drink: DrinkData }) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const redirectTo = (url: string): void => {\r\n    history.push(url);\r\n  };\r\n\r\n  const rows = drink.ingredients.map((ingredient, idx) => {\r\n    return {\r\n      ingredient,\r\n      measure: idx < drink.measures.length ? drink.measures[idx] : \"\",\r\n    };\r\n  });\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Ingredient</TableCell>\r\n            <TableCell>Measure</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <TableRow\r\n              onClick={() => redirectTo(`/ingredient/${row.ingredient.name}/`)}\r\n              key={row.ingredient.name}\r\n              className={classes.row}\r\n            >\r\n              <TableCell>{row.ingredient.name}</TableCell>\r\n              <TableCell>{row.measure}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default IngredientTable;\r\n","import ReactLoading from \"react-loading\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: { paddingTop: \"15vh\", margin: \"auto\", maxHeight: 100, maxWidth: 100 },\r\n});\r\n\r\nconst Loading = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ReactLoading\r\n      type={\"spinningBubbles\"}\r\n      color={\"black\"}\r\n      height={\"10vh\"}\r\n      width={\"20vw\"}\r\n      className={classes.root}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import { gql } from \"@apollo/client\";\r\nimport { DrinkData } from \"../interfaces\";\r\n\r\nexport const DRINK_SEARCH_BY_NAME = gql`\r\n  query SearchDrinkByName($findDrinkByNameName: String) {\r\n    findDrinkByName(name: $findDrinkByNameName) {\r\n      name\r\n      ingredients {\r\n        name\r\n      }\r\n      strDrinkThumb\r\n      instructions\r\n      measures\r\n      strVideo\r\n    }\r\n  }\r\n`;\r\n\r\nexport interface DrinkSearchData {\r\n  findDrinkByName: DrinkData;\r\n}\r\nexport interface DrinkSearchVariables {\r\n  findDrinkByNameName: string;\r\n}\r\n","import { Card, CardContent, CardMedia, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ReactPlayer from \"react-player/youtube\";\r\nimport IngredientTable from \"./IngredientTable\";\r\nimport Loading from \"../Loading\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport {\r\n  DrinkSearchData,\r\n  DrinkSearchVariables,\r\n} from \"../../apollo/DrinkSearchByName\";\r\nimport { DRINK_SEARCH_BY_NAME } from \"../../apollo/DrinkSearchByName\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: { height: \"100%\", marginTop: \"5vh\" },\r\n  image: {\r\n    height: \"75vh\",\r\n  },\r\n  ingredients: {\r\n    marginTop: \"2em\",\r\n  },\r\n  video: {\r\n    margin: \"auto\",\r\n    marginTop: \"2em\",\r\n  },\r\n});\r\n\r\ntype DrinkPageProps = { name: string };\r\n\r\nconst DrinkPage = ({ name }: DrinkPageProps) => {\r\n  const classes = useStyles();\r\n  const { loading, data } = useQuery<DrinkSearchData, DrinkSearchVariables>(\r\n    DRINK_SEARCH_BY_NAME,\r\n    {\r\n      variables: {\r\n        findDrinkByNameName: name,\r\n      },\r\n    }\r\n  );\r\n\r\n  if (loading) {\r\n    return <Loading />;\r\n  }\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      {data?.findDrinkByName?.strDrinkThumb && (\r\n        <CardMedia\r\n          image={data.findDrinkByName.strDrinkThumb}\r\n          className={classes.image}\r\n        />\r\n      )}\r\n\r\n      <CardContent>\r\n        <Typography variant=\"h2\">\r\n          {data?.findDrinkByName?.name}\r\n          {/* <Typography variant=\"body1\">{drink.idDrink}</Typography> */}\r\n        </Typography>\r\n        <Typography variant=\"h4\">Recipe</Typography>\r\n        <Typography variant=\"h6\">\r\n          {data?.findDrinkByName?.instructions}\r\n        </Typography>\r\n\r\n        {data && (\r\n          <div className={classes.ingredients}>\r\n            <IngredientTable drink={data.findDrinkByName} />\r\n          </div>\r\n        )}\r\n\r\n        {data?.findDrinkByName?.strVideo && (\r\n          <ReactPlayer\r\n            url={data?.findDrinkByName?.strVideo}\r\n            className={classes.video}\r\n            width=\"80%\"\r\n          />\r\n        )}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default DrinkPage;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const INGREDIENT_SEARCH_BY_NAME = gql`\r\n  query SearchIngredientByName($findIngredientByNameName: String) {\r\n    findIngredientByName(name: $findIngredientByNameName) {\r\n      name\r\n      description\r\n      type\r\n      alcoholic\r\n      ABV\r\n    }\r\n  }\r\n`;\r\n\r\nexport interface IngredientData {\r\n  name: string;\r\n  description: string;\r\n  type: string;\r\n  alcoholic: boolean;\r\n  ABV: string;\r\n}\r\nexport interface IngredientSearchData {\r\n  findIngredientByName: IngredientData;\r\n}\r\nexport interface IngredientSearchVariables {\r\n  findIngredientByNameName: string;\r\n}\r\n","import { Card, CardContent, CardMedia, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Loading from \"../Loading\";\r\nimport {\r\n  IngredientSearchData,\r\n  IngredientSearchVariables,\r\n  INGREDIENT_SEARCH_BY_NAME,\r\n} from \"../../apollo/IngredientSearchByName\";\r\nimport { useQuery } from \"@apollo/client\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: { height: \"100%\", marginTop: \"5vh\" },\r\n  image: {\r\n    height: \"75vh\",\r\n  },\r\n  ingredients: {\r\n    marginTop: \"1vh\",\r\n  },\r\n});\r\n\r\nconst IngredientPage = ({ name }: { name: string }) => {\r\n  const classes = useStyles();\r\n\r\n  const { loading, data } = useQuery<\r\n    IngredientSearchData,\r\n    IngredientSearchVariables\r\n  >(INGREDIENT_SEARCH_BY_NAME, {\r\n    variables: {\r\n      findIngredientByNameName: name,\r\n    },\r\n  });\r\n\r\n  if (loading) {\r\n    return <Loading />;\r\n  }\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardMedia\r\n        image={`https://www.thecocktaildb.com/images/ingredients/${data?.findIngredientByName.name?.replaceAll(\r\n          \" \",\r\n          \"%20\"\r\n        )}.png`}\r\n        className={classes.image}\r\n      />\r\n\r\n      <CardContent>\r\n        <Typography variant=\"h2\">\r\n          {data?.findIngredientByName.name}\r\n          {/* <Typography variant=\"body1\">{ingredient.idIngredient}</Typography> */}\r\n        </Typography>\r\n        <Typography variant=\"body1\">\r\n          {data?.findIngredientByName.description}\r\n        </Typography>\r\n\r\n        {data?.findIngredientByName.ABV && (\r\n          <Typography variant=\"h6\">\r\n            {data?.findIngredientByName.ABV}% ABV\r\n          </Typography>\r\n        )}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default IngredientPage;\r\n","import { gql } from \"@apollo/client\";\r\nimport { DrinkData } from \"../interfaces\";\r\n\r\nexport const RANDOM_DRINK = gql`\r\n  query RandomDrink {\r\n    randomDrink {\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nexport interface RandomDrinkData {\r\n  randomDrink: DrinkData;\r\n}\r\n","import DrinkPage from \"../DrinkPage/DrinkPage\";\r\nimport { ReactElement } from \"react\";\r\nimport Loading from \"../Loading\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport RandomDrinkButton from \"../RandomDrinkButton\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { RandomDrinkData, RANDOM_DRINK } from \"../../apollo/RandomDrink\";\r\n\r\nconst useStyles = makeStyles({\r\n  randomDrinkButton: {\r\n    marginTop: \"2vh\",\r\n    marginBottom: \"2vh\",\r\n    textTransform: \"capitalize\",\r\n    margin: \"auto\",\r\n  },\r\n});\r\n\r\nconst RandomPage = (): ReactElement => {\r\n  const classes = useStyles();\r\n\r\n  const { loading, data, refetch } = useQuery<RandomDrinkData, {}>(\r\n    RANDOM_DRINK\r\n  );\r\n\r\n  if (loading) {\r\n    return <Loading />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {data?.randomDrink.name && <DrinkPage name={data?.randomDrink.name} />}\r\n\r\n      <Box textAlign=\"center\">\r\n        <RandomDrinkButton\r\n          randomDrinkHandler={refetch}\r\n          className={classes.randomDrinkButton}\r\n          buttonText=\"See another random cocktail!\"\r\n        />\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RandomPage;\r\n","import { Switch, Route } from \"react-router-dom\";\r\nimport SearchPage from \"./components/SearchPage/SearchPage\";\r\nimport DrinkPage from \"./components/DrinkPage/DrinkPage\";\r\nimport IngredientPage from \"./components/IngredientPage/IngredientPage\";\r\nimport RandomPage from \"./components/RandomPage/RandomPage\";\r\n\r\nconst Router = () => {\r\n  return (\r\n    <Switch>\r\n      <Route\r\n        exact\r\n        path=\"/drink/:name\"\r\n        render={(props) => <DrinkPage name={props.match.params.name} />}\r\n      />\r\n      <Route\r\n        exact\r\n        path=\"/ingredient/:name\"\r\n        render={(props) => <IngredientPage name={props.match.params.name} />}\r\n      />\r\n      <Route exact path=\"/random\" component={RandomPage} />\r\n      <Route path=\"/\" component={SearchPage} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default Router;\r\n","import { Container } from \"@material-ui/core\";\nimport Router from \"./Router\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Container>\n        <Router />\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","import { ApolloClient, InMemoryCache } from \"@apollo/client\";\r\n\r\n// const localhost = \"http://localhost:4000/\";\r\nconst heroku = \"https://cooktails-graphql.herokuapp.com/\";\r\n\r\nexport const client = new ApolloClient({\r\n  uri: heroku,\r\n  cache: new InMemoryCache(),\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { HashRouter } from \"react-router-dom\";\nimport { ApolloProvider } from \"@apollo/client\";\nimport { client } from \"./apollo/client\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <HashRouter basename=\"/\">\n        <App />\n      </HashRouter>\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}