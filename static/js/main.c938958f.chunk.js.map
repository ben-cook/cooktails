{"version":3,"sources":["apollo/client.ts","apollo/DrinkSearchByName.ts","components/Loading.tsx","components/Nav.tsx","components/DrinkPage/IngredientTable.tsx","components/DrinkPage/DrinkPage.tsx","apollo/IngredientSearchByName.ts","util.ts","components/IngredientPage/IngredientPage.tsx","apollo/NextIngredientPageQuery.ts","components/ingredients.ts","components/NextIngredient/SmallDrinkCard.tsx","components/NextIngredient/SmallIngredientCard.tsx","components/NextIngredient/Suggestion.tsx","components/NextIngredient/NextIngredientPage.tsx","apollo/RandomDrink.ts","components/RandomDrinkButton.tsx","components/RandomPage/RandomPage.tsx","apollo/FindDrinksWithIngredients.ts","apollo/FuzzyDrinkSearch.ts","components/SearchPage/SearchBar.tsx","components/SearchPage/DrinkCard.tsx","components/SearchPage/SearchResults.tsx","components/SearchPage/SearchPage.tsx","Router.tsx","App.tsx","index.tsx"],"names":["client","ApolloClient","uri","cache","InMemoryCache","DRINK_SEARCH_BY_NAME","gql","useStyles","makeStyles","root","paddingTop","margin","maxHeight","maxWidth","Loading","classes","type","color","height","width","className","homeButton","marginTop","cursor","gridContainer","flexGrow","Nav","history","useHistory","Grid","container","direction","justifyContent","alignItems","spacing","item","xs","sm","onClick","push","table","row","IngredientTable","drink","rows","ingredients","map","ingredient","idx","measure","measures","length","TableContainer","component","Paper","variant","Table","aria-label","TableHead","TableRow","TableCell","TableBody","url","name","image","video","DrinkPageWrapper","props","DrinkPage","useQuery","variables","findDrinkByNameName","loading","data","Card","findDrinkByName","strDrinkThumb","CardMedia","CardContent","Typography","instructions","strVideo","INGREDIENT_SEARCH_BY_NAME","capitalizeEveryWord","s","split","toUpperCase","slice","capitalizeString","join","getIngredientImageURL","replaceAll","fitParagraphIntoCharacterLimit","paragraph","characterLimit","newParagraph","sentences","i","alcoholicTag","marginLeft","IngredientPage","findIngredientByNameName","findIngredientByName","display","alcoholic","ABV","undefined","description","NEXT_INGREDIENT_PAGE_QUERY","icon","text","SmallDrinkCard","SmallIngredientCard","removeItem","CardActions","ingredientImage","cardOutline","marginBottom","marginRight","Suggestion","drinksThatCouldBeMade","largerThan540","useMediaQuery","to","style","textDecoration","alignContent","minWidth","Fragment","ingredientsAutocomplete","nextButton","textTransform","addIcons","backButton","cardContainer","heading","NextIngredientPage","useState","setIngredients","removeListItem","newIngredients","forEach","ingredientsToBuyIngredientNames","drinksThatCanBeMadeWithIngredientsIngredientNames","zeroMinWidth","Autocomplete","id","options","allIngredients","getOptionLabel","option","filterSelectedOptions","renderInput","params","TextField","label","renderOption","onChange","_","value","includes","addlistItem","blurOnSelect","clearOnBlur","align","md","lg","drinksThatCanBeMadeWithIngredients","ingredientsToBuy","sort","a","b","ingredientToBuy","RANDOM_DRINK","RandomDrinkButton","randomDrinkHandler","buttonText","fullWidth","Button","randomDrinkButton","buttonContainer","RandomPage","refetch","randomDrink","Box","textAlign","FIND_DRINKS_WITH_INGREDIENTS","FUZZY_DRINK_SEARCH","searchGridContainer","searchbar","clickableIcons","optionsPaper","SearchBar","onChangeHandler","onFilterChangeHandler","largerThan600","open","setOpen","Container","multiple","placeholder","DrinkCard","SearchResults","drinks","resultsGridContainer","resultsGridItem","errorMessage","formatErrorMessage","items","ingredientsUpper","recursiveFormat","innerItems","SearchPage","searchInput","setSearchInput","filterInput","setFilterInput","displayType","setDisplayType","searchDrinkData","fuzzySearchDrinksByNameSearchTerm","fuzzySearchDrinksByNameOffset","fuzzySearchDrinksByNameLimit","ingredientFilterData","findDrinksWithIngredientsIngredientNames","findDrinksWithIngredientsOffset","findDrinksWithIngredientsLimit","searchDataRef","useRef","current","e","target","fuzzySearchDrinksByName","findDrinksWithIngredients","Router","exact","path","render","match","App","ReactDOM","StrictMode","ApolloProvider","basename","document","getElementById"],"mappings":"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BvC,OAE9B,eAACgB,EAAA,EAAD,CACExB,QAAQ,YACRgD,QAAQ,SACRnF,UAAWL,EAAQmF,aAHrB,WAKO,OAAJzB,QAAI,IAAJA,OAAA,EAAAA,EAAM6B,qBAAqBE,YAA3B,oBAEO,OAAJ/B,QAAI,IAAJA,OAAA,EAAAA,EAAM6B,qBAAqBG,KAA3B,oBACUhC,QADV,IACUA,OADV,EACUA,EAAM6B,qBAAqBG,IADrC,SAEI,SAEkCC,KAArC,OAAJjC,QAAI,IAAJA,OAAA,EAAAA,EAAM6B,qBAAqBE,cAC1B,OAAC/B,QAAD,IAACA,OAAD,EAACA,EAAM6B,qBAAqBE,YAC5B,mBAGJ,eAACzB,EAAA,EAAD,CAAYxB,QAAQ,QAApB,WACO,OAAJkB,QAAI,IAAJA,OAAA,EAAAA,EAAM6B,qBAAqBK,cAC1Bf,GAA8B,OAC5BnB,QAD4B,IAC5BA,OAD4B,EAC5BA,EAAM6B,qBAAqBK,YAC3B,KAJN,iB,8ECxEGC,GAA6BtG,YAAH,ylBCF1BuC,GAAc,CACzB,gBACA,OACA,WACA,iBACA,iBACA,gBACA,iBACA,WACA,WACA,aACA,cACA,MACA,WACA,gBACA,SACA,mBACA,WACA,mBACA,gBACA,oBACA,OACA,QACA,WACA,SACA,YACA,QACA,eACA,cACA,cACA,iBACA,YACA,UACA,iBACA,iBACA,UACA,SACA,aACA,SACA,UACA,gBACA,sBACA,SACA,iBACA,aACA,eACA,aACA,QACA,aACA,OACA,cACA,UACA,eACA,UACA,eACA,YACA,gBACA,eACA,oBACA,sBACA,uBACA,wBACA,sBACA,iBACA,iBACA,kBACA,eACA,eACA,YACA,cACA,qBACA,UACA,SACA,cACA,SACA,wBACA,UACA,WACA,UACA,kBACA,QACA,aACA,mBACA,gBACA,wBACA,mBACA,WACA,iBACA,SACA,cACA,6BACA,YACA,UACA,WACA,SACA,gBACA,cACA,mBACA,iBACA,eACA,iBACA,YACA,sBACA,oBACA,iBACA,kBACA,kBACA,QACA,WACA,oBACA,kBACA,eACA,gBACA,SACA,YACA,YACA,mBACA,iBACA,eACA,gBACA,kBACA,eACA,cACA,gBACA,SACA,gBACA,iBACA,SACA,YACA,OACA,aACA,iBACA,YACA,aACA,aACA,SACA,cACA,kBACA,oBACA,kBACA,QACA,eACA,aACA,mBACA,kBACA,kBACA,iBACA,kBACA,kBACA,gBACA,gBACA,oBACA,cACA,gBACA,WACA,eACA,aACA,UACA,QACA,eACA,iBACA,sBACA,WACA,iBACA,iBACA,YACA,aACA,WACA,gBACA,cACA,eACA,iBACA,iBACA,MACA,YACA,WACA,SACA,sBACA,aACA,WACA,YACA,WACA,QACA,eACA,gBACA,OACA,YACA,iBACA,gBACA,kBACA,aACA,SACA,cACA,oBACA,mBACA,aACA,QACA,cACA,cACA,WACA,eACA,WACA,MACA,SACA,aACA,cACA,eACA,YACA,iBACA,eACA,WACA,eACA,gBACA,gBACA,mBACA,cACA,aACA,mBACA,SACA,mBACA,wBACA,oBACA,eACA,YACA,gBACA,cACA,WACA,iBACA,mBACA,gBACA,iBACA,mBACA,cACA,QACA,cACA,QACA,gBACA,WACA,YACA,UACA,MACA,YACA,WACA,sBACA,gBACA,cACA,2BACA,eACA,eACA,QACA,QACA,WACA,iBACA,SACA,qBACA,eACA,OACA,eACA,WACA,SACA,QACA,WACA,QACA,cACA,aACA,aACA,cACA,aACA,kBACA,WACA,gBACA,cACA,YACA,SACA,eACA,OACA,aACA,YACA,qBACA,eACA,aACA,UACA,UACA,aACA,WACA,qBACA,QACA,cACA,oBACA,qBACA,0BACA,gBACA,kBACA,eACA,iBACA,oBACA,gBACA,OACA,gBACA,cACA,SACA,SACA,uBACA,OACA,qBACA,OACA,aACA,eACA,SACA,SACA,QACA,cACA,YACA,QACA,SACA,iBACA,iBACA,eACA,cACA,eACA,cACA,iBACA,aACA,gBACA,eACA,cACA,eACA,OACA,eACA,SACA,eACA,gBACA,sBACA,sBACA,SACA,QACA,gBACA,eACA,iBACA,cACA,eACA,cACA,gBACA,qBACA,aACA,SACA,sBACA,qBACA,aACA,SACA,mBACA,kBACA,YACA,kBACA,kBACA,gBACA,kBACA,gCACA,gBACA,eACA,QACA,kBACA,cACA,QACA,oBACA,OACA,iBACA,WACA,iBACA,UACA,aACA,gBACA,kBACA,oBACA,kBACA,oBACA,qBACA,kBACA,WACA,mBACA,mBACA,uBACA,WACA,UACA,SACA,YACA,YACA,qBACA,OACA,WACA,iBACA,6BACA,YACA,iBACA,YACA,MACA,eACA,cACA,OACA,OACA,mBACA,UACA,eACA,WACA,kBACA,sBACA,SACA,UACA,SACA,UACA,iBACA,WACA,aACA,oBACA,WACA,mBACA,WACA,YACA,YACA,aACA,aACA,SACA,kBACA,SACA,cACA,eACA,sBACA,mBACA,qBACA,mBACA,QACA,cACA,gBACA,QACA,iBACA,cACA,iBACA,iBACA,gBACA,OACA,aACA,MACA,oBACA,UACA,eACA,QACA,YACA,SACA,eACA,cACA,aACA,YACA,QACA,UACA,oBACA,kBACA,kBACA,mBACA,gBACA,gBACA,WACA,UACA,QACA,QACA,aACA,sBACA,gBACA,iBACA,UACA,SACA,wBACA,YACA,iBACA,gBACA,aACA,0BACA,oBACA,aACA,cACA,qBACA,OACA,uBACA,WACA,QACA,oBACA,UACA,aACA,QCpeItC,GAAYC,YAAW,CAC3BC,KAAM,CAAES,OAAQ,QAChB8C,MAAO,CACL9C,OAAQ,QAEV2F,KAAM,CACJ,UAAW,CAAEtF,OAAQ,YAEvBuF,KAAM,KAyBOC,GAtBQ,SAAC,GAMjB,IALLhD,EAKI,EALJA,KACAa,EAII,EAJJA,cAKM7D,EAAUR,KAEhB,OACE,eAACmE,EAAA,EAAD,CAAMtD,UAAWL,EAAQN,KAAM8C,QAAQ,WAAvC,UACE,cAACsB,EAAA,EAAD,CAAWb,MAAOY,EAAexD,UAAWL,EAAQiD,QAEpD,cAACc,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAYxB,QAAQ,KAAKnC,UAAWL,EAAQ+F,KAA5C,SACG/C,U,+BCjBLxD,GAAYC,YAAW,C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","file":"static/js/main.c938958f.chunk.js","sourcesContent":["import { ApolloClient, InMemoryCache } from \"@apollo/client\";\r\n\r\n// const localhost = \"http://localhost:4000/\";\r\nconst heroku = \"https://cooktails-graphql.herokuapp.com/\";\r\n\r\nexport const client = new ApolloClient({\r\n  uri: heroku,\r\n  cache: new InMemoryCache(),\r\n});\r\n","import { gql } from \"@apollo/client\";\r\n\r\nimport { DrinkData } from \"../interfaces\";\r\n\r\nexport const DRINK_SEARCH_BY_NAME = gql`\r\n  query SearchDrinkByName($findDrinkByNameName: String) {\r\n    findDrinkByName(name: $findDrinkByNameName) {\r\n      name\r\n      ingredients {\r\n        name\r\n      }\r\n      strDrinkThumb\r\n      instructions\r\n      measures\r\n      strVideo\r\n    }\r\n  }\r\n`;\r\n\r\nexport interface DrinkSearchData {\r\n  findDrinkByName: DrinkData;\r\n}\r\nexport interface DrinkSearchVariables {\r\n  findDrinkByNameName: string;\r\n}\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport ReactLoading from \"react-loading\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: { paddingTop: \"15vh\", margin: \"auto\", maxHeight: 100, maxWidth: 100 },\r\n});\r\n\r\nconst Loading = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ReactLoading\r\n      type={\"spinningBubbles\"}\r\n      color={\"black\"}\r\n      height={\"10vh\"}\r\n      width={\"20vw\"}\r\n      className={classes.root}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import { Grid } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles({\r\n  homeButton: {\r\n    margin: \"auto\",\r\n    marginTop: \"1vh\",\r\n    \"&:hover\": { cursor: \"pointer\" },\r\n  },\r\n  gridContainer: { flexGrow: 1, width: \"100%\", marginTop: \"2vh\" },\r\n});\r\n\r\nconst Nav = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"row\"\r\n      justifyContent=\"space-between\"\r\n      alignItems=\"center\"\r\n      spacing={2}\r\n      className={classes.gridContainer}\r\n    >\r\n      <Grid item container xs={2} sm={1}>\r\n        <HomeIcon\r\n          className={classes.homeButton}\r\n          onClick={() => history.push(\"/\")}\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import {\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { DrinkData } from \"../../interfaces\";\r\n\r\nconst useStyles = makeStyles({\r\n  table: {},\r\n  row: { \"&:hover\": { cursor: \"pointer\" } },\r\n});\r\n\r\nconst IngredientTable = ({ drink }: { drink: DrinkData }) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const redirectTo = (url: string): void => {\r\n    history.push(url);\r\n  };\r\n\r\n  const rows = drink.ingredients.map((ingredient, idx) => {\r\n    return {\r\n      ingredient,\r\n      measure: idx < drink.measures.length ? drink.measures[idx] : \"\",\r\n    };\r\n  });\r\n\r\n  return (\r\n    <TableContainer component={Paper} variant=\"outlined\">\r\n      <Table className={classes.table} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Ingredient</TableCell>\r\n            <TableCell>Measure</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <TableRow\r\n              onClick={() => redirectTo(`/ingredient/${row.ingredient.name}/`)}\r\n              key={row.ingredient.name}\r\n              className={classes.row}\r\n            >\r\n              <TableCell>{row.ingredient.name}</TableCell>\r\n              <TableCell>{row.measure}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default IngredientTable;\r\n","import { useQuery } from \"@apollo/client\";\r\nimport { Card, CardContent, CardMedia, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ReactPlayer from \"react-player/youtube\";\r\n\r\nimport {\r\n  DRINK_SEARCH_BY_NAME,\r\n  DrinkSearchData,\r\n  DrinkSearchVariables,\r\n} from \"../../apollo/DrinkSearchByName\";\r\nimport Loading from \"../Loading\";\r\nimport Nav from \"../Nav\";\r\nimport IngredientTable from \"./IngredientTable\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: { height: \"100%\", marginTop: \"5vh\" },\r\n  image: {\r\n    height: \"75vh\",\r\n  },\r\n  ingredients: {\r\n    marginTop: \"2em\",\r\n  },\r\n  video: {\r\n    margin: \"auto\",\r\n    marginTop: \"2em\",\r\n  },\r\n});\r\n\r\nexport const DrinkPageWrapper = (props: DrinkPageProps) => {\r\n  return (\r\n    <>\r\n      <Nav />\r\n      <DrinkPage {...props} />\r\n    </>\r\n  );\r\n};\r\n\r\ntype DrinkPageProps = { name: string };\r\n\r\nconst DrinkPage = ({ name }: DrinkPageProps) => {\r\n  const classes = useStyles();\r\n  const { loading, data } = useQuery<DrinkSearchData, DrinkSearchVariables>(\r\n    DRINK_SEARCH_BY_NAME,\r\n    {\r\n      variables: {\r\n        findDrinkByNameName: name,\r\n      },\r\n    }\r\n  );\r\n\r\n  if (loading) {\r\n    return <Loading />;\r\n  }\r\n\r\n  return (\r\n    <Card className={classes.root} variant=\"outlined\">\r\n      {data?.findDrinkByName?.strDrinkThumb && (\r\n        <CardMedia\r\n          image={data.findDrinkByName.strDrinkThumb}\r\n          className={classes.image}\r\n        />\r\n      )}\r\n\r\n      <CardContent>\r\n        <Typography variant=\"h2\">{data?.findDrinkByName?.name}</Typography>\r\n        <Typography variant=\"h5\">Instructions</Typography>\r\n        <Typography variant=\"body1\">\r\n          {data?.findDrinkByName?.instructions}\r\n        </Typography>\r\n\r\n        {data && (\r\n          <div className={classes.ingredients}>\r\n            <IngredientTable drink={data.findDrinkByName} />\r\n          </div>\r\n        )}\r\n\r\n        {data?.findDrinkByName?.strVideo && (\r\n          <ReactPlayer\r\n            url={data?.findDrinkByName?.strVideo}\r\n            className={classes.video}\r\n            width=\"80%\"\r\n          />\r\n        )}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default DrinkPage;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const INGREDIENT_SEARCH_BY_NAME = gql`\r\n  query SearchIngredientByName($findIngredientByNameName: String) {\r\n    findIngredientByName(name: $findIngredientByNameName) {\r\n      name\r\n      description\r\n      type\r\n      alcoholic\r\n      ABV\r\n    }\r\n  }\r\n`;\r\n\r\nexport interface IngredientData {\r\n  name: string;\r\n  description: string;\r\n  type: string;\r\n  alcoholic: boolean;\r\n  ABV: string;\r\n}\r\nexport interface IngredientSearchData {\r\n  findIngredientByName: IngredientData;\r\n}\r\nexport interface IngredientSearchVariables {\r\n  findIngredientByNameName: string;\r\n}\r\n","export const REACT_APP_API_KEY = 9973533;\r\nexport const REACT_APP_CORS_PROXY_URL =\r\n  \"https://fierce-mountain-04762.herokuapp.com/\";\r\n\r\nexport const capitalizeString = (s: string): string =>\r\n  (s && s[0].toUpperCase() + s.slice(1)) || \"\";\r\n\r\nexport const capitalizeEveryWord = (s: string): string =>\r\n  s\r\n    .split(\" \")\r\n    .map((s) => capitalizeString(s))\r\n    .join(\" \");\r\n\r\nexport const replaceSpaceWithUnderscore = (s: string): string =>\r\n  s\r\n    .split(\"\")\r\n    .map((char) => (char === \" \" ? \"_\" : char))\r\n    .join(\"\");\r\n\r\nexport const listInEnglish = (items: string[]): string => {\r\n  if (items.length === 0) {\r\n    return \"\";\r\n  }\r\n\r\n  let itemsUpper = items.map(capitalizeEveryWord);\r\n\r\n  const recursiveFormat = (innerItems: string[]): string => {\r\n    let string;\r\n\r\n    if (innerItems.length === 1) {\r\n      string = innerItems[0];\r\n    } else if (innerItems.length === 2) {\r\n      string = `${recursiveFormat(\r\n        innerItems.slice(0, 1)\r\n      )} and ${recursiveFormat(innerItems.slice(1))}`;\r\n    } else {\r\n      string = `${innerItems[0]}, ${recursiveFormat(innerItems.slice(1))}`;\r\n    }\r\n\r\n    return string;\r\n  };\r\n\r\n  return recursiveFormat(itemsUpper);\r\n};\r\n\r\nexport const getIngredientImageURL = (name: string): string => {\r\n  return `https://www.thecocktaildb.com/images/ingredients/${name.replaceAll(\r\n    \" \",\r\n    \"%20\"\r\n  )}.png`;\r\n};\r\n\r\nexport const fitParagraphIntoCharacterLimit = (\r\n  paragraph: string,\r\n  characterLimit: number\r\n): string => {\r\n  if (paragraph.length <= characterLimit) {\r\n    return paragraph;\r\n  }\r\n\r\n  let newParagraph = paragraph;\r\n  const sentences = paragraph.split(\".\");\r\n  let i = 0;\r\n\r\n  while (newParagraph.length > characterLimit) {\r\n    newParagraph = sentences.slice(0, sentences.length - 1 - i).join(\".\");\r\n    i++;\r\n  }\r\n\r\n  return newParagraph;\r\n};\r\n","import { useQuery } from \"@apollo/client\";\r\nimport { Card, CardContent, CardMedia, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport {\r\n  INGREDIENT_SEARCH_BY_NAME,\r\n  IngredientSearchData,\r\n  IngredientSearchVariables,\r\n} from \"../../apollo/IngredientSearchByName\";\r\nimport {\r\n  fitParagraphIntoCharacterLimit,\r\n  getIngredientImageURL,\r\n} from \"../../util\";\r\nimport Loading from \"../Loading\";\r\nimport Nav from \"../Nav\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: { height: \"100%\", marginTop: \"5vh\" },\r\n  image: {\r\n    height: \"75vh\",\r\n  },\r\n  ingredients: {\r\n    marginTop: \"1vh\",\r\n  },\r\n  alcoholicTag: { marginLeft: \"1rem\" },\r\n});\r\n\r\nconst IngredientPage = ({ name }: { name: string }) => {\r\n  const classes = useStyles();\r\n\r\n  const { loading, data } = useQuery<\r\n    IngredientSearchData,\r\n    IngredientSearchVariables\r\n  >(INGREDIENT_SEARCH_BY_NAME, {\r\n    variables: {\r\n      findIngredientByNameName: name,\r\n    },\r\n  });\r\n\r\n  if (loading) {\r\n    return <Loading />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Nav />\r\n      <Card className={classes.root} variant=\"outlined\">\r\n        {data?.findIngredientByName && (\r\n          <CardMedia\r\n            image={getIngredientImageURL(data?.findIngredientByName.name)}\r\n            className={classes.image}\r\n          />\r\n        )}\r\n\r\n        <CardContent>\r\n          <Typography variant=\"h2\" display=\"inline\">\r\n            {data?.findIngredientByName.name}\r\n          </Typography>\r\n          <Typography\r\n            variant=\"subtitle1\"\r\n            display=\"inline\"\r\n            className={classes.alcoholicTag}\r\n          >\r\n            {data?.findIngredientByName.alcoholic &&\r\n              `alcoholic${\r\n                data?.findIngredientByName.ABV\r\n                  ? ` - ${data?.findIngredientByName.ABV}% abv`\r\n                  : \"\"\r\n              }`}\r\n            {data?.findIngredientByName.alcoholic !== undefined &&\r\n              !data?.findIngredientByName.alcoholic &&\r\n              \"non-alcoholic\"}\r\n          </Typography>\r\n\r\n          <Typography variant=\"body1\">\r\n            {data?.findIngredientByName.description &&\r\n              fitParagraphIntoCharacterLimit(\r\n                data?.findIngredientByName.description,\r\n                800\r\n              )}\r\n            .\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default IngredientPage;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const NEXT_INGREDIENT_PAGE_QUERY = gql`\r\n  query NextIngredientToBuyQuery(\r\n    $drinksThatCanBeMadeWithIngredientsIngredientNames: [String]\r\n    $ingredientsToBuyIngredientNames: [String]\r\n  ) {\r\n    ingredientsToBuy(ingredientNames: $ingredientsToBuyIngredientNames) {\r\n      ingredient {\r\n        name\r\n      }\r\n      drinksThatCouldBeMade {\r\n        name\r\n        strDrinkThumb\r\n      }\r\n    }\r\n\r\n    drinksThatCanBeMadeWithIngredients(\r\n      ingredientNames: $drinksThatCanBeMadeWithIngredientsIngredientNames\r\n    ) {\r\n      name\r\n      strDrinkThumb\r\n    }\r\n\r\n    #ingredients {\r\n    #  name\r\n    #}\r\n  }\r\n`;\r\n\r\nexport interface IIngredientToBuy {\r\n  ingredient: { name: string };\r\n  drinksThatCouldBeMade: { name: string; strDrinkThumb: string }[];\r\n}\r\n\r\nexport interface NextIngredientData {\r\n  ingredientsToBuy: IIngredientToBuy[];\r\n  drinksThatCanBeMadeWithIngredients: { name: string; strDrinkThumb: string }[];\r\n  // ingredients: { name: string }[];\r\n}\r\n\r\nexport interface NextIngredientVariables {\r\n  ingredientsToBuyIngredientNames: string[];\r\n  drinksThatCanBeMadeWithIngredientsIngredientNames: string[];\r\n}\r\n","export const ingredients = [\r\n  \"151 proof rum\",\r\n  \"7-up\",\r\n  \"Absinthe\",\r\n  \"Absolut Kurant\",\r\n  \"Absolut Peppar\",\r\n  \"Absolut Vodka\",\r\n  \"Absolut citron\",\r\n  \"Advocaat\",\r\n  \"Aejo Rum\",\r\n  \"Aftershock\",\r\n  \"Agave Syrup\",\r\n  \"Ale\",\r\n  \"Allspice\",\r\n  \"Allspice Dram\",\r\n  \"Almond\",\r\n  \"Almond Flavoring\",\r\n  \"Amaretto\",\r\n  \"Amaro Montenegro\",\r\n  \"Angelica Root\",\r\n  \"Angostura Bitters\",\r\n  \"Anis\",\r\n  \"Anise\",\r\n  \"Anisette\",\r\n  \"Aperol\",\r\n  \"Apfelkorn\",\r\n  \"Apple\",\r\n  \"Apple Brandy\",\r\n  \"Apple Cider\",\r\n  \"Apple Juice\",\r\n  \"Apple Schnapps\",\r\n  \"Applejack\",\r\n  \"Apricot\",\r\n  \"Apricot Brandy\",\r\n  \"Apricot Nectar\",\r\n  \"Aquavit\",\r\n  \"Arrack\",\r\n  \"Asafoetida\",\r\n  \"Averna\",\r\n  \"Bacardi\",\r\n  \"Bacardi Limon\",\r\n  \"Baileys Irish Cream\",\r\n  \"Banana\",\r\n  \"Banana Liqueur\",\r\n  \"Banana Rum\",\r\n  \"Banana Syrup\",\r\n  \"Barenjager\",\r\n  \"Basil\",\r\n  \"Beef Stock\",\r\n  \"Beer\",\r\n  \"Benedictine\",\r\n  \"Berries\",\r\n  \"Bitter lemon\",\r\n  \"Bitters\",\r\n  \"Black Pepper\",\r\n  \"Black Rum\",\r\n  \"Black Sambuca\",\r\n  \"Blackberries\",\r\n  \"Blackberry Brandy\",\r\n  \"Blackberry Schnapps\",\r\n  \"Blackcurrant Cordial\",\r\n  \"Blackcurrant Schnapps\",\r\n  \"Blackcurrant Squash\",\r\n  \"Blackstrap rum\",\r\n  \"Blended Scotch\",\r\n  \"Blended Whiskey\",\r\n  \"Blood Orange\",\r\n  \"Blue Curacao\",\r\n  \"Blue Maui\",\r\n  \"Blueberries\",\r\n  \"Blueberry Schnapps\",\r\n  \"Bourbon\",\r\n  \"Brandy\",\r\n  \"Brown Sugar\",\r\n  \"Butter\",\r\n  \"Butterscotch Schnapps\",\r\n  \"Cachaca\",\r\n  \"Calvados\",\r\n  \"Campari\",\r\n  \"Canadian Whisky\",\r\n  \"Candy\",\r\n  \"Cantaloupe\",\r\n  \"Caramel Coloring\",\r\n  \"Caramel Sauce\",\r\n  \"Carbonated Soft Drink\",\r\n  \"Carbonated Water\",\r\n  \"Cardamom\",\r\n  \"Cayenne Pepper\",\r\n  \"Celery\",\r\n  \"Celery Salt\",\r\n  \"Chambord Raspberry Liqueur\",\r\n  \"Champagne\",\r\n  \"Chareau\",\r\n  \"Cherries\",\r\n  \"Cherry\",\r\n  \"Cherry Brandy\",\r\n  \"Cherry Cola\",\r\n  \"Cherry Grenadine\",\r\n  \"Cherry Heering\",\r\n  \"Cherry Juice\",\r\n  \"Cherry Liqueur\",\r\n  \"Chocolate\",\r\n  \"Chocolate Ice-cream\",\r\n  \"Chocolate Liqueur\",\r\n  \"Chocolate Milk\",\r\n  \"Chocolate Sauce\",\r\n  \"Chocolate Syrup\",\r\n  \"Cider\",\r\n  \"Cinnamon\",\r\n  \"Cinnamon Schnapps\",\r\n  \"Cinnamon Whisky\",\r\n  \"Citrus Vodka\",\r\n  \"Clamato Juice\",\r\n  \"Cloves\",\r\n  \"Club Soda\",\r\n  \"Coca-Cola\",\r\n  \"Cocchi Americano\",\r\n  \"Cocktail Onion\",\r\n  \"Cocoa Powder\",\r\n  \"Coconut Cream\",\r\n  \"Coconut Liqueur\",\r\n  \"Coconut Milk\",\r\n  \"Coconut Rum\",\r\n  \"Coconut Syrup\",\r\n  \"Coffee\",\r\n  \"Coffee Brandy\",\r\n  \"Coffee Liqueur\",\r\n  \"Cognac\",\r\n  \"Cointreau\",\r\n  \"Cola\",\r\n  \"Cold Water\",\r\n  \"Condensed Milk\",\r\n  \"Coriander\",\r\n  \"Corn Syrup\",\r\n  \"Cornstarch\",\r\n  \"Corona\",\r\n  \"Cranberries\",\r\n  \"Cranberry Juice\",\r\n  \"Cranberry Liqueur\",\r\n  \"Cranberry Vodka\",\r\n  \"Cream\",\r\n  \"Cream Sherry\",\r\n  \"Cream Soda\",\r\n  \"Cream of Coconut\",\r\n  \"Creme De Almond\",\r\n  \"Creme De Banane\",\r\n  \"Creme De Cacao\",\r\n  \"Creme De Cassis\",\r\n  \"Creme De Noyaux\",\r\n  \"Creme Fraiche\",\r\n  \"Creme de Mure\",\r\n  \"Creme de Violette\",\r\n  \"Crown Royal\",\r\n  \"Crystal Light\",\r\n  \"Cucumber\",\r\n  \"Cumin Powder\",\r\n  \"Cumin Seed\",\r\n  \"Curacao\",\r\n  \"Cynar\",\r\n  \"Daiquiri Mix\",\r\n  \"Dark Chocolate\",\r\n  \"Dark Creme De Cacao\",\r\n  \"Dark Rum\",\r\n  \"Dark Soy Sauce\",\r\n  \"Demerara Sugar\",\r\n  \"Diet Coke\",\r\n  \"Dr. Pepper\",\r\n  \"Drambuie\",\r\n  \"Dried Oregano\",\r\n  \"Dry Curacao\",\r\n  \"Dry Vermouth\",\r\n  \"Dubonnet Blanc\",\r\n  \"Dubonnet Rouge\",\r\n  \"Egg\",\r\n  \"Egg White\",\r\n  \"Egg Yolk\",\r\n  \"Eggnog\",\r\n  \"Elderflower cordial\",\r\n  \"Erin Cream\",\r\n  \"Espresso\",\r\n  \"Everclear\",\r\n  \"Falernum\",\r\n  \"Fanta\",\r\n  \"Fennel Seeds\",\r\n  \"Fernet-Branca\",\r\n  \"Figs\",\r\n  \"Firewater\",\r\n  \"Flaked Almonds\",\r\n  \"Food Coloring\",\r\n  \"Forbidden Fruit\",\r\n  \"Frangelico\",\r\n  \"Fresca\",\r\n  \"Fresh Basil\",\r\n  \"Fresh Lemon Juice\",\r\n  \"Fresh Lime Juice\",\r\n  \"Fresh Mint\",\r\n  \"Fruit\",\r\n  \"Fruit Juice\",\r\n  \"Fruit Punch\",\r\n  \"Galliano\",\r\n  \"Garlic Sauce\",\r\n  \"Gatorade\",\r\n  \"Gin\",\r\n  \"Ginger\",\r\n  \"Ginger Ale\",\r\n  \"Ginger Beer\",\r\n  \"Ginger Syrup\",\r\n  \"Glycerine\",\r\n  \"Godiva Liqueur\",\r\n  \"Gold Tequila\",\r\n  \"Gold rum\",\r\n  \"Goldschlager\",\r\n  \"Grain Alcohol\",\r\n  \"Grand Marnier\",\r\n  \"Granulated Sugar\",\r\n  \"Grape juice\",\r\n  \"Grape soda\",\r\n  \"Grapefruit Juice\",\r\n  \"Grapes\",\r\n  \"Green Chartreuse\",\r\n  \"Green Creme de Menthe\",\r\n  \"Green Ginger Wine\",\r\n  \"Green Olives\",\r\n  \"Grenadine\",\r\n  \"Ground Ginger\",\r\n  \"Guava juice\",\r\n  \"Guinness\",\r\n  \"Guinness stout\",\r\n  \"Habanero Peppers\",\r\n  \"Half-and-half\",\r\n  \"Hawaiian punch\",\r\n  \"Hazelnut liqueur\",\r\n  \"Heavy cream\",\r\n  \"Honey\",\r\n  \"Honey syrup\",\r\n  \"Hooch\",\r\n  \"Hot Chocolate\",\r\n  \"Hot Damn\",\r\n  \"Hot Sauce\",\r\n  \"Hpnotiq\",\r\n  \"Ice\",\r\n  \"Ice-Cream\",\r\n  \"Iced tea\",\r\n  \"Ilegal Joven mezcal\",\r\n  \"Irish Whiskey\",\r\n  \"Irish cream\",\r\n  \"Islay single malt Scotch\",\r\n  \"Jack Daniels\",\r\n  \"Jagermeister\",\r\n  \"Jello\",\r\n  \"Jelly\",\r\n  \"Jim Beam\",\r\n  \"Johnnie Walker\",\r\n  \"Kahlua\",\r\n  \"Key Largo Schnapps\",\r\n  \"Kirschwasser\",\r\n  \"Kiwi\",\r\n  \"Kiwi liqueur\",\r\n  \"Kool-Aid\",\r\n  \"Kummel\",\r\n  \"Lager\",\r\n  \"Lavender\",\r\n  \"Lemon\",\r\n  \"Lemon Juice\",\r\n  \"Lemon Peel\",\r\n  \"Lemon soda\",\r\n  \"Lemon vodka\",\r\n  \"Lemon-Lime\",\r\n  \"Lemon-lime soda\",\r\n  \"Lemonade\",\r\n  \"Licorice Root\",\r\n  \"Light Cream\",\r\n  \"Light Rum\",\r\n  \"Lillet\",\r\n  \"Lillet Blanc\",\r\n  \"Lime\",\r\n  \"Lime Juice\",\r\n  \"Lime Peel\",\r\n  \"Lime juice cordial\",\r\n  \"Lime liqueur\",\r\n  \"Lime vodka\",\r\n  \"Limeade\",\r\n  \"Madeira\",\r\n  \"Malibu Rum\",\r\n  \"Mandarin\",\r\n  \"Mandarine napoleon\",\r\n  \"Mango\",\r\n  \"Maple syrup\",\r\n  \"Maraschino Cherry\",\r\n  \"Maraschino Liqueur\",\r\n  \"Maraschino cherry juice\",\r\n  \"Margarita mix\",\r\n  \"Marjoram leaves\",\r\n  \"Marshmallows\",\r\n  \"Martini Bianco\",\r\n  \"Martini Extra Dry\",\r\n  \"Martini Rosso\",\r\n  \"Maui\",\r\n  \"Melon Liqueur\",\r\n  \"Melon Vodka\",\r\n  \"Mezcal\",\r\n  \"Midori\",\r\n  \"Midori Melon Liqueur\",\r\n  \"Milk\",\r\n  \"Mini-snickers bars\",\r\n  \"Mint\",\r\n  \"Mint syrup\",\r\n  \"Mountain Dew\",\r\n  \"Nocino\",\r\n  \"Nutmeg\",\r\n  \"Olive\",\r\n  \"Olive Brine\",\r\n  \"Olive Oil\",\r\n  \"Onion\",\r\n  \"Orange\",\r\n  \"Orange Bitters\",\r\n  \"Orange Curacao\",\r\n  \"Orange Juice\",\r\n  \"Orange Peel\",\r\n  \"Orange Slice\",\r\n  \"Orange Soda\",\r\n  \"Orange liqueur\",\r\n  \"Orange rum\",\r\n  \"Orange spiral\",\r\n  \"Orange vodka\",\r\n  \"Oreo cookie\",\r\n  \"Orgeat Syrup\",\r\n  \"Ouzo\",\r\n  \"Oyster Sauce\",\r\n  \"Papaya\",\r\n  \"Papaya juice\",\r\n  \"Parfait amour\",\r\n  \"Passion fruit juice\",\r\n  \"Passion fruit syrup\",\r\n  \"Passoa\",\r\n  \"Peach\",\r\n  \"Peach Bitters\",\r\n  \"Peach Nectar\",\r\n  \"Peach Schnapps\",\r\n  \"Peach Vodka\",\r\n  \"Peach brandy\",\r\n  \"Peach juice\",\r\n  \"Peach liqueur\",\r\n  \"Peachtree schnapps\",\r\n  \"Peanut Oil\",\r\n  \"Pepper\",\r\n  \"Peppermint Schnapps\",\r\n  \"Peppermint extract\",\r\n  \"Pepsi Cola\",\r\n  \"Pernod\",\r\n  \"Peychaud bitters\",\r\n  \"Pina colada mix\",\r\n  \"Pineapple\",\r\n  \"Pineapple Juice\",\r\n  \"Pineapple Syrup\",\r\n  \"Pineapple rum\",\r\n  \"Pineapple vodka\",\r\n  \"Pineapple-orange-banana juice\",\r\n  \"Pink lemonade\",\r\n  \"Pisang Ambon\",\r\n  \"Pisco\",\r\n  \"Plain Chocolate\",\r\n  \"Plain Flour\",\r\n  \"Plums\",\r\n  \"Pomegranate juice\",\r\n  \"Port\",\r\n  \"Powdered Sugar\",\r\n  \"Prosecco\",\r\n  \"Purple passion\",\r\n  \"Raisins\",\r\n  \"Ramazzotti\",\r\n  \"Raspberry Jam\",\r\n  \"Raspberry Juice\",\r\n  \"Raspberry Liqueur\",\r\n  \"Raspberry Vodka\",\r\n  \"Raspberry cordial\",\r\n  \"Raspberry schnapps\",\r\n  \"Raspberry syrup\",\r\n  \"Red Bull\",\r\n  \"Red Chile Flakes\",\r\n  \"Red Chili Flakes\",\r\n  \"Red Hot Chili Flakes\",\r\n  \"Red Wine\",\r\n  \"Rhubarb\",\r\n  \"Ricard\",\r\n  \"Rock Salt\",\r\n  \"Root beer\",\r\n  \"Root beer schnapps\",\r\n  \"Rose\",\r\n  \"Rosemary\",\r\n  \"Rosemary Syrup\",\r\n  \"Roses sweetened lime juice\",\r\n  \"Rosewater\",\r\n  \"Rosso Vermouth\",\r\n  \"Ruby Port\",\r\n  \"Rum\",\r\n  \"Rumple Minze\",\r\n  \"Rye Whiskey\",\r\n  \"Sake\",\r\n  \"Salt\",\r\n  \"Salted Chocolate\",\r\n  \"Sambuca\",\r\n  \"Sarsaparilla\",\r\n  \"Schnapps\",\r\n  \"Schweppes Lemon\",\r\n  \"Schweppes Russchian\",\r\n  \"Scotch\",\r\n  \"Sherbet\",\r\n  \"Sherry\",\r\n  \"Singani\",\r\n  \"Sirup of roses\",\r\n  \"Sloe Gin\",\r\n  \"Soda Water\",\r\n  \"Sour Apple Pucker\",\r\n  \"Sour Mix\",\r\n  \"Southern Comfort\",\r\n  \"Soy Milk\",\r\n  \"Soy Sauce\",\r\n  \"Soya Milk\",\r\n  \"Soya Sauce\",\r\n  \"Spiced Rum\",\r\n  \"Sprite\",\r\n  \"Squeezed Orange\",\r\n  \"Squirt\",\r\n  \"St. Germain\",\r\n  \"Strawberries\",\r\n  \"Strawberry Schnapps\",\r\n  \"Strawberry juice\",\r\n  \"Strawberry liqueur\",\r\n  \"Strawberry syrup\",\r\n  \"Sugar\",\r\n  \"Sugar Syrup\",\r\n  \"Sunny delight\",\r\n  \"Surge\",\r\n  \"Swedish punsch\",\r\n  \"Sweet Cream\",\r\n  \"Sweet Vermouth\",\r\n  \"Sweet and Sour\",\r\n  \"Tabasco Sauce\",\r\n  \"Tang\",\r\n  \"Tawny port\",\r\n  \"Tea\",\r\n  \"Tennessee whiskey\",\r\n  \"Tequila\",\r\n  \"Tequila rose\",\r\n  \"Thyme\",\r\n  \"Tia Maria\",\r\n  \"Tomato\",\r\n  \"Tomato Juice\",\r\n  \"Tonic Water\",\r\n  \"Triple Sec\",\r\n  \"Tropicana\",\r\n  \"Tuaca\",\r\n  \"Vanilla\",\r\n  \"Vanilla Ice-Cream\",\r\n  \"Vanilla extract\",\r\n  \"Vanilla liqueur\",\r\n  \"Vanilla schnapps\",\r\n  \"Vanilla syrup\",\r\n  \"Vanilla vodka\",\r\n  \"Vermouth\",\r\n  \"Vinegar\",\r\n  \"Vodka\",\r\n  \"Water\",\r\n  \"Watermelon\",\r\n  \"Watermelon schnapps\",\r\n  \"Whipped Cream\",\r\n  \"Whipping Cream\",\r\n  \"Whiskey\",\r\n  \"Whisky\",\r\n  \"White Creme de Menthe\",\r\n  \"White Rum\",\r\n  \"White Vermouth\",\r\n  \"White Vinegar\",\r\n  \"White Wine\",\r\n  \"White chocolate liqueur\",\r\n  \"White grape juice\",\r\n  \"White port\",\r\n  \"Wild Turkey\",\r\n  \"Wildberry schnapps\",\r\n  \"Wine\",\r\n  \"Worcestershire Sauce\",\r\n  \"Wormwood\",\r\n  \"Yeast\",\r\n  \"Yellow Chartreuse\",\r\n  \"Yoghurt\",\r\n  \"Yukon Jack\",\r\n  \"Zima\",\r\n];\r\n","import { Card, CardContent, CardMedia, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: { height: \"100%\" },\r\n  image: {\r\n    height: \"20vh\",\r\n  },\r\n  icon: {\r\n    \"&:hover\": { cursor: \"pointer\" },\r\n  },\r\n  text: {},\r\n});\r\n\r\nconst SmallDrinkCard = ({\r\n  name,\r\n  strDrinkThumb,\r\n}: {\r\n  name: string;\r\n  strDrinkThumb: string;\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.root} variant=\"outlined\">\r\n      <CardMedia image={strDrinkThumb} className={classes.image} />\r\n\r\n      <CardContent>\r\n        <Typography variant=\"h6\" className={classes.text}>\r\n          {name}\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default SmallDrinkCard;\r\n","import {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardMedia,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\n\r\nimport { getIngredientImageURL } from \"../../util\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: { height: \"100%\" },\r\n  image: {\r\n    height: \"20vh\",\r\n  },\r\n  icon: {\r\n    \"&:hover\": { cursor: \"pointer\" },\r\n  },\r\n  text: {},\r\n});\r\n\r\nconst SmallIngredientCard = ({\r\n  name,\r\n  removeItem,\r\n}: {\r\n  name: string;\r\n  removeItem?: (name: string) => void;\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.root} variant=\"outlined\">\r\n      {removeItem && (\r\n        <CardActions>\r\n          <ClearIcon\r\n            className={classes.icon}\r\n            onClick={() => removeItem(name)}\r\n          />\r\n        </CardActions>\r\n      )}\r\n\r\n      <CardMedia\r\n        image={getIngredientImageURL(name)}\r\n        className={classes.image}\r\n      />\r\n\r\n      <CardContent>\r\n        <Typography variant=\"h6\" className={classes.text}>\r\n          {name}\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default SmallIngredientCard;\r\n","import {\r\n  Card,\r\n  CardContent,\r\n  CardMedia,\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n  useMediaQuery,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { IIngredientToBuy } from \"../../apollo/NextIngredientPageQuery\";\r\nimport { getIngredientImageURL } from \"../../util\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: { height: \"100%\" },\r\n  image: {\r\n    height: \"20vh\",\r\n  },\r\n  icon: {\r\n    \"&:hover\": { cursor: \"pointer\" },\r\n  },\r\n  text: {},\r\n  ingredientImage: {\r\n    height: 200,\r\n    width: 150,\r\n  },\r\n  cardOutline: {\r\n    marginLeft: \"1vw\",\r\n    marginTop: \"1vw\",\r\n    marginBottom: \"1vw\",\r\n    marginRight: \"1vw\",\r\n  },\r\n});\r\n\r\nconst Suggestion = ({\r\n  ingredient,\r\n  drinksThatCouldBeMade,\r\n}: IIngredientToBuy) => {\r\n  const classes = useStyles();\r\n\r\n  const largerThan540 = useMediaQuery(\"(min-width:540px)\");\r\n\r\n  return (\r\n    <Paper className={classes.root} variant=\"outlined\">\r\n      <Grid container justifyContent=\"center\" alignItems=\"stretch\">\r\n        <Grid item xs className={classes.cardOutline}>\r\n          {/* Image Card*/}\r\n          <Link\r\n            to={`/ingredient/${ingredient.name}`}\r\n            style={{ color: \"inherit\", textDecoration: \"inherit\" }}\r\n          >\r\n            <Card variant=\"outlined\" style={{ height: \"100%\" }}>\r\n              <CardMedia\r\n                image={getIngredientImageURL(ingredient.name)}\r\n                className={classes.image}\r\n              />\r\n\r\n              <CardContent>\r\n                <Typography variant=\"h6\" className={classes.text}>\r\n                  {ingredient.name}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Link>\r\n        </Grid>\r\n\r\n        {/* Arrow Icon*/}\r\n        <Grid item>\r\n          <Grid\r\n            container\r\n            direction=\"column\"\r\n            alignContent=\"center\"\r\n            justifyContent=\"center\"\r\n            style={{ height: \"100%\", minWidth: \"1em\" }}\r\n          >\r\n            <ArrowForwardIcon />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        {/* Desktop Sized Drinks*/}\r\n        {largerThan540 &&\r\n          drinksThatCouldBeMade.map((drink, idx) => (\r\n            <React.Fragment key={drink.name}>\r\n              {idx > 0 && (\r\n                <Grid item>\r\n                  <Grid\r\n                    container\r\n                    direction=\"column\"\r\n                    alignContent=\"center\"\r\n                    justifyContent=\"center\"\r\n                    style={{ height: \"100%\", minWidth: \"1em\" }}\r\n                  >\r\n                    <AddIcon />\r\n                  </Grid>\r\n                </Grid>\r\n              )}\r\n\r\n              <Grid item xs className={classes.cardOutline}>\r\n                <Link\r\n                  to={`/drink/${drink.name}`}\r\n                  style={{ color: \"inherit\", textDecoration: \"inherit\" }}\r\n                >\r\n                  <Card variant=\"outlined\" style={{ height: \"100%\" }}>\r\n                    <CardMedia\r\n                      image={drink.strDrinkThumb}\r\n                      className={classes.image}\r\n                    />\r\n\r\n                    <CardContent>\r\n                      <Typography variant=\"h6\" className={classes.text}>\r\n                        {drink.name}\r\n                      </Typography>\r\n                    </CardContent>\r\n                  </Card>\r\n                </Link>\r\n              </Grid>\r\n            </React.Fragment>\r\n          ))}\r\n\r\n        {/* Mobile Sized Drinks*/}\r\n        {!largerThan540 && (\r\n          <Grid\r\n            container\r\n            item\r\n            xs\r\n            direction=\"column\"\r\n            justifyContent=\"center\"\r\n            alignContent=\"center\"\r\n            alignItems=\"center\"\r\n          >\r\n            {drinksThatCouldBeMade.map((drink, idx) => (\r\n              <React.Fragment key={drink.name}>\r\n                {idx > 0 && (\r\n                  <Grid item style={{ width: \"100%\" }}>\r\n                    <Grid\r\n                      container\r\n                      direction=\"column\"\r\n                      alignContent=\"center\"\r\n                      justifyContent=\"center\"\r\n                      style={{ height: \"100%\", minWidth: \"1em\" }}\r\n                    >\r\n                      <AddIcon />\r\n                    </Grid>\r\n                  </Grid>\r\n                )}\r\n\r\n                <Grid item style={{ width: \"100%\" }}>\r\n                  <Link\r\n                    to={`/drink/${drink.name}`}\r\n                    style={{ color: \"inherit\", textDecoration: \"inherit\" }}\r\n                  >\r\n                    <Card className={classes.cardOutline} variant=\"outlined\">\r\n                      <CardMedia\r\n                        image={drink.strDrinkThumb}\r\n                        className={classes.image}\r\n                      />\r\n\r\n                      <CardContent>\r\n                        <Typography variant=\"h6\" className={classes.text}>\r\n                          {drink.name}\r\n                        </Typography>\r\n                      </CardContent>\r\n                    </Card>\r\n                  </Link>\r\n                </Grid>\r\n              </React.Fragment>\r\n            ))}\r\n          </Grid>\r\n        )}\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Suggestion;\r\n","import { useQuery } from \"@apollo/client\";\r\nimport { Grid, TextField, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport NavigateBeforeIcon from \"@material-ui/icons/NavigateBefore\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { Fragment, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nimport {\r\n  NEXT_INGREDIENT_PAGE_QUERY,\r\n  NextIngredientData,\r\n  NextIngredientVariables,\r\n} from \"../../apollo/NextIngredientPageQuery\";\r\nimport { capitalizeEveryWord } from \"../../util\";\r\nimport { ingredients as allIngredients } from \"../ingredients\";\r\nimport SmallDrinkCard from \"./SmallDrinkCard\";\r\nimport SmallIngredientCard from \"./SmallIngredientCard\";\r\nimport Suggestion from \"./Suggestion\";\r\n\r\nconst useStyles = makeStyles({\r\n  ingredientsAutocomplete: { marginTop: \"2vh\" },\r\n  nextButton: {\r\n    marginTop: \"2vh\",\r\n    marginBottom: \"2vh\",\r\n    textTransform: \"capitalize\",\r\n    margin: \"auto\",\r\n  },\r\n  addIcons: {\r\n    marginRight: \"0.5em\",\r\n    height: \"0.8em\",\r\n    width: \"0.8em\",\r\n  },\r\n  backButton: {\r\n    margin: \"auto\",\r\n    marginTop: \"1vh\",\r\n    \"&:hover\": { cursor: \"pointer\" },\r\n  },\r\n  gridContainer: { flexGrow: 1, width: \"100%\" },\r\n  cardContainer: { marginTop: \"1vh\" },\r\n  heading: { marginBottom: \"1vh\", marginTop: \"1vh\" },\r\n});\r\n\r\nconst NextIngredientPage = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const [ingredients, setIngredients] = useState<string[]>([]);\r\n\r\n  const removeListItem = (item: string): void => {\r\n    let newIngredients: string[] = [];\r\n    ingredients.forEach((ingredient) => {\r\n      if (ingredient !== item) {\r\n        newIngredients.push(ingredient);\r\n      }\r\n    });\r\n\r\n    setIngredients(newIngredients);\r\n  };\r\n\r\n  const addlistItem = (item: string): void => {\r\n    let newIngredients: string[] = [...ingredients];\r\n    if (!newIngredients.includes(item)) {\r\n      newIngredients.push(item);\r\n      setIngredients(newIngredients);\r\n    }\r\n  };\r\n\r\n  const onIngredientSelect = (\r\n    _: React.ChangeEvent<{}>,\r\n    value: string | null\r\n  ) => {\r\n    value && addlistItem(value);\r\n  };\r\n\r\n  const { data } = useQuery<NextIngredientData, NextIngredientVariables>(\r\n    NEXT_INGREDIENT_PAGE_QUERY,\r\n    {\r\n      variables: {\r\n        ingredientsToBuyIngredientNames: ingredients,\r\n        drinksThatCanBeMadeWithIngredientsIngredientNames: ingredients,\r\n      },\r\n    }\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n        spacing={2}\r\n        className={classes.gridContainer}\r\n      >\r\n        <Grid item container xs={2} sm={1}>\r\n          <NavigateBeforeIcon\r\n            className={classes.backButton}\r\n            onClick={() => history.push(\"/\")}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs zeroMinWidth>\r\n          <Autocomplete\r\n            id=\"tags-outlined\"\r\n            options={allIngredients}\r\n            getOptionLabel={(option) => capitalizeEveryWord(option)}\r\n            filterSelectedOptions\r\n            className={classes.ingredientsAutocomplete}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                variant=\"outlined\"\r\n                label=\"Add ingredients you have!\"\r\n              />\r\n            )}\r\n            renderOption={(option) => (\r\n              <Fragment>\r\n                <AddIcon className={classes.addIcons} />{\" \"}\r\n                {capitalizeEveryWord(option)}\r\n              </Fragment>\r\n            )}\r\n            onChange={onIngredientSelect}\r\n            blurOnSelect\r\n            clearOnBlur\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Typography variant=\"h4\" className={classes.heading}>\r\n        Ingredients:\r\n      </Typography>\r\n      {ingredients.length === 0 && (\r\n        <Typography variant=\"subtitle1\" align=\"center\">\r\n          Add an ingredient to get started.\r\n        </Typography>\r\n      )}\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"flex-start\"\r\n        alignItems=\"stretch\"\r\n        spacing={2}\r\n        className={classes.cardContainer}\r\n      >\r\n        {ingredients.map((ingredient) => (\r\n          <Grid item key={ingredient} xs={6} sm={4} md={3} lg={2}>\r\n            <SmallIngredientCard\r\n              name={ingredient}\r\n              removeItem={removeListItem}\r\n            />\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n\r\n      <Typography variant=\"h4\" className={classes.heading}>\r\n        Drinks:\r\n      </Typography>\r\n      {data?.drinksThatCanBeMadeWithIngredients.length === 0 && (\r\n        <Typography variant=\"subtitle1\" align=\"center\">\r\n          Add more ingredients to see drinks that you can make.\r\n        </Typography>\r\n      )}\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"flex-start\"\r\n        alignItems=\"stretch\"\r\n        spacing={2}\r\n        className={classes.cardContainer}\r\n      >\r\n        {data?.drinksThatCanBeMadeWithIngredients.map((drink) => (\r\n          <Grid item key={drink.name} xs={6} sm={4} md={3} lg={2}>\r\n            <Link\r\n              to={`/drink/${drink.name}`}\r\n              style={{ color: \"inherit\", textDecoration: \"inherit\" }}\r\n            >\r\n              <SmallDrinkCard {...drink} />\r\n            </Link>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n\r\n      {data?.ingredientsToBuy && data?.ingredientsToBuy.length > 0 && (\r\n        <Typography variant=\"h4\" className={classes.heading}>\r\n          Suggestions:\r\n        </Typography>\r\n      )}\r\n\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"flex-start\"\r\n        alignItems=\"stretch\"\r\n        spacing={2}\r\n        className={classes.cardContainer}\r\n      >\r\n        {data?.ingredientsToBuy &&\r\n          [...data?.ingredientsToBuy]\r\n            .sort(\r\n              (a, b) =>\r\n                b.drinksThatCouldBeMade.length - a.drinksThatCouldBeMade.length\r\n            )\r\n            .slice(0, 8)\r\n            .map((ingredientToBuy, idx) => (\r\n              <Grid\r\n                item\r\n                key={ingredientToBuy.ingredient.name}\r\n                xs={12}\r\n                sm={12}\r\n                md={6}\r\n                lg={6}\r\n              >\r\n                <Suggestion {...ingredientToBuy} />\r\n              </Grid>\r\n            ))}\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NextIngredientPage;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nimport { DrinkData } from \"../interfaces\";\r\n\r\nexport const RANDOM_DRINK = gql`\r\n  query RandomDrink {\r\n    randomDrink {\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nexport interface RandomDrinkData {\r\n  randomDrink: DrinkData;\r\n}\r\n","import { Button, Typography } from \"@material-ui/core\";\r\n\r\ninterface RandomDrinkButtonProps {\r\n  randomDrinkHandler: () => void;\r\n  className: string;\r\n  buttonText: string;\r\n  fullWidth?: boolean;\r\n}\r\nconst RandomDrinkButton = ({\r\n  randomDrinkHandler,\r\n  className,\r\n  buttonText,\r\n  fullWidth,\r\n}: RandomDrinkButtonProps) => {\r\n  return (\r\n    <Button\r\n      variant=\"outlined\"\r\n      color=\"default\"\r\n      className={className}\r\n      fullWidth={fullWidth}\r\n    >\r\n      <Typography variant=\"body1\" onClick={() => randomDrinkHandler()}>\r\n        {buttonText}\r\n      </Typography>\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default RandomDrinkButton;\r\n","import { useQuery } from \"@apollo/client\";\r\nimport { Box, Grid } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport NavigateBeforeIcon from \"@material-ui/icons/NavigateBefore\";\r\nimport { ReactElement } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nimport { RANDOM_DRINK, RandomDrinkData } from \"../../apollo/RandomDrink\";\r\nimport DrinkPage from \"../DrinkPage/DrinkPage\";\r\nimport Loading from \"../Loading\";\r\nimport RandomDrinkButton from \"../RandomDrinkButton\";\r\n\r\nconst useStyles = makeStyles({\r\n  randomDrinkButton: {\r\n    marginTop: \"2vh\",\r\n    marginBottom: \"0.6vh\",\r\n    textTransform: \"capitalize\",\r\n    margin: \"auto\",\r\n  },\r\n  buttonContainer: { flexGrow: 1, width: \"100%\", marginTop: \"2vh\" },\r\n  backButton: {\r\n    margin: \"auto\",\r\n    marginTop: \"1vh\",\r\n    \"&:hover\": { cursor: \"pointer\" },\r\n  },\r\n});\r\n\r\nconst RandomPage = (): ReactElement => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const { loading, data, refetch } = useQuery<RandomDrinkData, {}>(\r\n    RANDOM_DRINK\r\n  );\r\n\r\n  if (loading) {\r\n    return <Loading />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"flex-start\"\r\n        alignItems=\"center\"\r\n        spacing={2}\r\n        className={classes.buttonContainer}\r\n      >\r\n        <Grid item container xs={2} sm={1}>\r\n          <NavigateBeforeIcon\r\n            className={classes.backButton}\r\n            onClick={() => history.push(\"/\")}\r\n          />\r\n        </Grid>\r\n        <Grid item container xs={10} sm={8} md={6} lg={4}>\r\n          <RandomDrinkButton\r\n            randomDrinkHandler={refetch}\r\n            className={classes.randomDrinkButton}\r\n            buttonText=\"See another random cocktail!\"\r\n            fullWidth={true}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {data?.randomDrink.name && (\r\n        <Link\r\n          to={`/drink/${data.randomDrink.name}`}\r\n          style={{ color: \"inherit\", textDecoration: \"inherit\" }}\r\n        >\r\n          <DrinkPage name={data?.randomDrink.name} />\r\n        </Link>\r\n      )}\r\n\r\n      <Box textAlign=\"center\"></Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RandomPage;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nimport { DrinkCardProps } from \"../components/SearchPage/DrinkCard\";\r\n\r\nexport const FIND_DRINKS_WITH_INGREDIENTS = gql`\r\n  query findDrinksWithIngredients(\r\n    $findDrinksWithIngredientsIngredientNames: [String]\r\n    $findDrinksWithIngredientsLimit: Int\r\n    $findDrinksWithIngredientsOffset: Int\r\n  ) {\r\n    findDrinksWithIngredients(\r\n      ingredientNames: $findDrinksWithIngredientsIngredientNames\r\n      limit: $findDrinksWithIngredientsLimit\r\n      offset: $findDrinksWithIngredientsOffset\r\n    ) {\r\n      name\r\n      ingredients {\r\n        name\r\n      }\r\n      strDrinkThumb\r\n    }\r\n  }\r\n`;\r\n\r\nexport interface FindDrinksWithIngredientsData {\r\n  findDrinksWithIngredients: DrinkCardProps[];\r\n}\r\n\r\nexport interface FindDrinksWithIngredientsVariables {\r\n  findDrinksWithIngredientsIngredientNames: string[];\r\n  findDrinksWithIngredientsLimit: number;\r\n  findDrinksWithIngredientsOffset: number;\r\n}\r\n","import { gql } from \"@apollo/client\";\r\n\r\nimport { DrinkCardProps } from \"../components/SearchPage/DrinkCard\";\r\n\r\nexport const FUZZY_DRINK_SEARCH = gql`\r\n  query FuzzyDrinkSearch(\r\n    $fuzzySearchDrinksByNameSearchTerm: String\r\n    $fuzzySearchDrinksByNameLimit: Int\r\n    $fuzzySearchDrinksByNameOffset: Int\r\n  ) {\r\n    fuzzySearchDrinksByName(\r\n      searchTerm: $fuzzySearchDrinksByNameSearchTerm\r\n      limit: $fuzzySearchDrinksByNameLimit\r\n      offset: $fuzzySearchDrinksByNameOffset\r\n    ) {\r\n      name\r\n      ingredients {\r\n        name\r\n      }\r\n      strDrinkThumb\r\n    }\r\n  }\r\n`;\r\n\r\nexport interface FuzzyDrinkSearchData {\r\n  fuzzySearchDrinksByName: DrinkCardProps[];\r\n}\r\nexport interface FuzzyDrinkSearchVariables {\r\n  fuzzySearchDrinksByNameSearchTerm: string;\r\n  fuzzySearchDrinksByNameLimit: number;\r\n  fuzzySearchDrinksByNameOffset: number;\r\n}\r\n","import {\r\n  Box,\r\n  Container,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { capitalizeEveryWord } from \"../../util\";\r\nimport { ingredients } from \"../ingredients\";\r\nimport RandomDrinkButton from \"../RandomDrinkButton\";\r\n\r\nconst useStyles = makeStyles({\r\n  searchGridContainer: { flexGrow: 1, width: \"100%\" },\r\n  searchbar: { marginTop: \"2vh\", marginBottom: \"2vh\", width: \"100%\" },\r\n  clickableIcons: { margin: \"auto\", \"&:hover\": { cursor: \"pointer\" } },\r\n  ingredientsAutocomplete: { paddingTop: \"2vh\" },\r\n  randomDrinkButton: {\r\n    marginBottom: \"2vh\",\r\n    textTransform: \"capitalize\",\r\n    margin: \"auto\",\r\n  },\r\n  optionsPaper: {\r\n    marginBottom: \"2vh\",\r\n    justifyContent: \"center\",\r\n  },\r\n});\r\n\r\ninterface SearchBarProps {\r\n  onChangeHandler: (e: object & { target: { value: string } }) => void;\r\n  onFilterChangeHandler: (e: object, value: string[]) => void;\r\n  largerThan600: boolean;\r\n}\r\n\r\nconst SearchBar = ({\r\n  onChangeHandler,\r\n  onFilterChangeHandler,\r\n  largerThan600,\r\n}: SearchBarProps) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const redirectTo = (url: string): void => {\r\n    history.push(url);\r\n  };\r\n\r\n  const [open, setOpen] = useState<boolean>(false);\r\n\r\n  const changeOpen = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  const randomDrinkHandler = () => {\r\n    redirectTo(\"/random\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n        spacing={2}\r\n        className={classes.searchGridContainer}\r\n      >\r\n        <Grid item xs zeroMinWidth>\r\n          <TextField\r\n            className={classes.searchbar}\r\n            label=\"Search for a drink\"\r\n            variant=\"outlined\"\r\n            onChange={onChangeHandler}\r\n          />\r\n        </Grid>\r\n        <Grid item container xs={2} sm={1}>\r\n          <FilterListIcon\r\n            className={classes.clickableIcons}\r\n            onClick={changeOpen}\r\n          />\r\n        </Grid>\r\n        <Grid item container xs={2} sm={1}>\r\n          <NavigateNextIcon\r\n            className={classes.clickableIcons}\r\n            onClick={() => history.push(\"/next\")}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {open && (\r\n        <Paper className={classes.optionsPaper} variant=\"outlined\">\r\n          <Container>\r\n            <Autocomplete\r\n              multiple\r\n              id=\"tags-outlined\"\r\n              options={ingredients}\r\n              getOptionLabel={(option) => capitalizeEveryWord(option)}\r\n              filterSelectedOptions\r\n              className={classes.ingredientsAutocomplete}\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  variant=\"outlined\"\r\n                  label=\"Filter by ingredients instead!\"\r\n                  placeholder=\"+\"\r\n                />\r\n              )}\r\n              onChange={onFilterChangeHandler}\r\n            />\r\n            <Typography variant=\"h6\" align=\"center\">\r\n              or...\r\n            </Typography>\r\n\r\n            <Box textAlign=\"center\">\r\n              <RandomDrinkButton\r\n                randomDrinkHandler={randomDrinkHandler}\r\n                className={classes.randomDrinkButton}\r\n                buttonText=\"Show me a Random Cocktail\"\r\n                fullWidth={!largerThan600}\r\n              />\r\n            </Box>\r\n          </Container>\r\n        </Paper>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import { Card, CardContent, CardMedia, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { ReactElement } from \"react\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: { height: \"100%\" },\r\n  image: {\r\n    height: \"30vh\",\r\n  },\r\n});\r\n\r\nexport interface DrinkCardProps {\r\n  name: string;\r\n  ingredients: {\r\n    name: string;\r\n  }[];\r\n  strDrinkThumb: string;\r\n}\r\n\r\nconst DrinkCard = ({ drink }: { drink: DrinkCardProps }): ReactElement => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.root} variant=\"outlined\">\r\n      {drink.strDrinkThumb && (\r\n        <CardMedia image={drink.strDrinkThumb} className={classes.image} />\r\n      )}\r\n\r\n      <CardContent>\r\n        <Typography variant=\"h6\">{drink.name}</Typography>\r\n        {/* <Typography variant=\"h6\">{drink.strDrinkThumb}</Typography> */}\r\n\r\n        {drink.ingredients.map((ingredient, idx) => (\r\n          <Typography variant=\"body1\" key={idx}>\r\n            {ingredient.name}\r\n          </Typography>\r\n        ))}\r\n\r\n        {/* <Typography variant=\"body1\">{drink.idDrink}</Typography> */}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default DrinkCard;\r\n","import { Grid } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport DrinkCard, { DrinkCardProps } from \"./DrinkCard\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: { flexGrow: 1 },\r\n});\r\n\r\nconst SearchResults = ({ drinks }: { drinks: DrinkCardProps[] }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"row\"\r\n      justifyContent=\"flex-start\"\r\n      alignItems=\"stretch\"\r\n      spacing={2}\r\n      className={classes.root}\r\n    >\r\n      {drinks.map((drink: DrinkCardProps) => (\r\n        <Grid item key={drink.name} xs={12} sm={6} md={4} lg={3}>\r\n          <Link\r\n            to={`/drink/${drink.name}`}\r\n            style={{ color: \"inherit\", textDecoration: \"inherit\" }}\r\n          >\r\n            <DrinkCard drink={drink} />\r\n          </Link>\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default SearchResults;\r\n","import { useQuery } from \"@apollo/client\";\r\nimport { Container, Typography, useMediaQuery } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useRef, useState } from \"react\";\r\n\r\nimport {\r\n  FIND_DRINKS_WITH_INGREDIENTS,\r\n  FindDrinksWithIngredientsData,\r\n  FindDrinksWithIngredientsVariables,\r\n} from \"../../apollo/FindDrinksWithIngredients\";\r\nimport {\r\n  FUZZY_DRINK_SEARCH,\r\n  FuzzyDrinkSearchData,\r\n  FuzzyDrinkSearchVariables,\r\n} from \"../../apollo/FuzzyDrinkSearch\";\r\nimport { capitalizeEveryWord, listInEnglish } from \"../../util\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport SearchResults from \"./SearchResults\";\r\n\r\nconst useStyles = makeStyles({\r\n  resultsGridContainer: { flexGrow: 1 },\r\n  resultsGridItem: {},\r\n  errorMessage: { margin: \"auto\", marginTop: \"1.5em\" },\r\n});\r\n\r\nconst formatErrorMessage = (ingredients: string[]): string => {\r\n  let ingredientsUpper = ingredients.map(capitalizeEveryWord);\r\n  return `Couldn't find any drinks with ${listInEnglish(ingredientsUpper)}.`;\r\n};\r\n\r\nconst SearchPage = () => {\r\n  const classes = useStyles();\r\n\r\n  const [searchInput, setSearchInput] = useState<string>(\"\");\r\n  const [filterInput, setFilterInput] = useState<string[]>([]);\r\n\r\n  type DisplayType = \"search\" | \"ingredientFilter\";\r\n  const [displayType, setDisplayType] = useState<DisplayType>(\"search\");\r\n\r\n  const largerThan600 = useMediaQuery(\"(min-width:600px)\");\r\n\r\n  const { data: searchDrinkData } = useQuery<\r\n    FuzzyDrinkSearchData,\r\n    FuzzyDrinkSearchVariables\r\n  >(FUZZY_DRINK_SEARCH, {\r\n    variables: {\r\n      fuzzySearchDrinksByNameSearchTerm: searchInput,\r\n      fuzzySearchDrinksByNameOffset: 0,\r\n      fuzzySearchDrinksByNameLimit: 8,\r\n    },\r\n  });\r\n\r\n  const { data: ingredientFilterData } = useQuery<\r\n    FindDrinksWithIngredientsData,\r\n    FindDrinksWithIngredientsVariables\r\n  >(FIND_DRINKS_WITH_INGREDIENTS, {\r\n    variables: {\r\n      findDrinksWithIngredientsIngredientNames: filterInput,\r\n      findDrinksWithIngredientsOffset: 0,\r\n      findDrinksWithIngredientsLimit: 8,\r\n    },\r\n  });\r\n\r\n  const onSearchChangeHandler = (e: object & { target: { value: string } }) => {\r\n    setSearchInput(e.target.value);\r\n    setDisplayType(\"search\");\r\n  };\r\n\r\n  const onFilterChangeHandler = (e: object, value: string[]) => {\r\n    setFilterInput(value);\r\n    setDisplayType(\"ingredientFilter\");\r\n  };\r\n\r\n  const searchDataRef = useRef(searchDrinkData);\r\n\r\n  if (searchDrinkData) {\r\n    searchDataRef.current = searchDrinkData;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <SearchBar\r\n        onChangeHandler={onSearchChangeHandler}\r\n        onFilterChangeHandler={onFilterChangeHandler}\r\n        largerThan600={largerThan600}\r\n      />\r\n\r\n      {/* {!drinks && !errorMessage && <Loading />} */}\r\n      {displayType === \"search\" && searchDataRef.current && (\r\n        <SearchResults drinks={searchDataRef.current.fuzzySearchDrinksByName} />\r\n      )}\r\n      {displayType === \"ingredientFilter\" && ingredientFilterData && (\r\n        <SearchResults\r\n          drinks={ingredientFilterData.findDrinksWithIngredients}\r\n        />\r\n      )}\r\n\r\n      {displayType === \"ingredientFilter\" &&\r\n        ingredientFilterData?.findDrinksWithIngredients.length === 0 && (\r\n          <Container>\r\n            <Typography\r\n              variant=\"h4\"\r\n              color=\"textPrimary\"\r\n              className={classes.errorMessage}\r\n              align=\"center\"\r\n            >\r\n              {formatErrorMessage(filterInput)}\r\n            </Typography>\r\n          </Container>\r\n        )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchPage;\r\n","import { Route, Switch } from \"react-router-dom\";\r\n\r\nimport { DrinkPageWrapper } from \"./components/DrinkPage/DrinkPage\";\r\nimport IngredientPage from \"./components/IngredientPage/IngredientPage\";\r\nimport NextIngredientPage from \"./components/NextIngredient/NextIngredientPage\";\r\nimport RandomPage from \"./components/RandomPage/RandomPage\";\r\nimport SearchPage from \"./components/SearchPage/SearchPage\";\r\n\r\nconst Router = () => {\r\n  return (\r\n    <Switch>\r\n      <Route\r\n        exact\r\n        path=\"/drink/:name\"\r\n        render={(props) => <DrinkPageWrapper name={props.match.params.name} />}\r\n      />\r\n      <Route\r\n        exact\r\n        path=\"/ingredient/:name\"\r\n        render={(props) => <IngredientPage name={props.match.params.name} />}\r\n      />\r\n      <Route exact path=\"/random\" component={RandomPage} />\r\n      <Route exact path=\"/next\" component={NextIngredientPage} />\r\n      <Route path=\"/\" component={SearchPage} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default Router;\r\n","import { Container } from \"@material-ui/core\";\n\nimport Router from \"./Router\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Container>\n        <Router />\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","import \"./index.css\";\nimport \"typeface-roboto\";\n\nimport { ApolloProvider } from \"@apollo/client\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\n\nimport { client } from \"./apollo/client\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <HashRouter basename=\"/\">\n        <App />\n      </HashRouter>\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}